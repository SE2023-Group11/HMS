{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\n//primevue\nimport SelectButton from 'primevue/selectbutton';\nimport InputText from 'primevue/inputtext';\nimport Button from 'primevue/button';\nimport Password from 'primevue/password';\nimport Dropdown from 'primevue/dropdown';\nimport Message from 'primevue/message';\nexport default {\n  __name: 'ForgetPwd',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const id = ref('');\n    const options = ref(['我是患者', '我是医生']);\n    const is_patient = ref('off');\n    const email = ref('');\n    const name = ref('');\n    const idCard = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const verifyCode = ref('');\n    const emailError = ref('');\n    const passwordError = ref('');\n    const sendingVerifyCode = ref(false);\n    const countdown = ref(60);\n    let timer = null;\n    const department = ref('');\n\n    //把邮箱给后端，后端发送验证码\n    function sendtoback() {\n      axios.post('http://localhost:8080/send-to-back', {\n        email: email.value\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    const sendVerifyCode = () => {\n      //首先改一下消息的通知\n      judchange.value = 0;\n      // 发送验证码的逻辑\n      sendingVerifyCode.value = true;\n      timer = setInterval(() => {\n        if (countdown.value > 1) {\n          countdown.value--;\n        } else {\n          sendtoback();\n          clearInterval(timer);\n          timer = null;\n          countdown.value = 60;\n          sendingVerifyCode.value = false;\n        }\n      }, 1000);\n    };\n    const checkPassword = () => {\n      if (password.value !== confirmPassword.value) {\n        passwordError.value = '两次密码输入不一致';\n      } else {\n        passwordError.value = '';\n      }\n    };\n\n    //判断传输是否成功的变量\n    const judchange = ref(0);\n    function registerbt() {\n      //首先验证验证码\n      axios.post('http://localhost:8080/verify-code', {\n        email: email.value,\n        verifyCode: verifyCode.value\n      }).then(response => {\n        console.log(response.data);\n        judchange.value = 1;\n      }).catch(error => {\n        console.error(error);\n        judchange.value = -1;\n      });\n      if (is_patient == '我是医生') {\n        axios.post('http://localhost:8080//docter_changepwd', {\n          doctor_id: id.value,\n          doctor_pwd: password.value\n        }).then(response => {\n          console.log(response.data);\n          judchange.value = 1;\n        }).catch(error => {\n          console.error(error);\n          judchange.value = -1;\n        });\n      } else {\n        axios.post('http://localhost:8080//patient_changepwd', {\n          patient_id: id.value,\n          patient_pwd: password.value\n        }).then(response => {\n          console.log(response.data);\n          judchange.value = 1;\n        }).catch(error => {\n          console.error(error);\n          judchange.value = -1;\n        });\n      }\n    }\n    const __returned__ = {\n      id,\n      options,\n      is_patient,\n      email,\n      name,\n      idCard,\n      password,\n      confirmPassword,\n      verifyCode,\n      emailError,\n      passwordError,\n      sendingVerifyCode,\n      countdown,\n      get timer() {\n        return timer;\n      },\n      set timer(v) {\n        timer = v;\n      },\n      department,\n      sendtoback,\n      sendVerifyCode,\n      checkPassword,\n      judchange,\n      registerbt,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get SelectButton() {\n        return SelectButton;\n      },\n      get InputText() {\n        return InputText;\n      },\n      get Button() {\n        return Button;\n      },\n      get Password() {\n        return Password;\n      },\n      get Dropdown() {\n        return Dropdown;\n      },\n      get Message() {\n        return Message;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","SelectButton","InputText","Button","Password","Dropdown","Message","id","options","is_patient","email","name","idCard","password","confirmPassword","verifyCode","emailError","passwordError","sendingVerifyCode","countdown","timer","department","sendtoback","post","value","then","response","console","log","data","catch","error","sendVerifyCode","judchange","setInterval","clearInterval","checkPassword","registerbt","doctor_id","doctor_pwd","patient_id","patient_pwd"],"sources":["D:/Desktop/HMS-front-end/hms_frontend/src/views/ForgetPwd.vue"],"sourcesContent":["<template>\r\n    <div class=\"register\">\r\n        <h1>忘记密码</h1>\r\n        <form @submit.prevent=\"submitForm\">\r\n\r\n            <div>\r\n                <div>\r\n                    <SelectButton v-model=\"is_patient\" :options=\"options\" aria-labelledby=\"basic\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"uid\">用户id</label>\r\n                <InputText type=\"text\" id=\"uid\" v-model=\"uid\" />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"verifyCode\">验证码</label>\r\n                <div class=\"verify-code\">\r\n                    <Input type=\"text\" id=\"verifyCode\" v-model=\"verifyCode\" />\r\n                    <button type=\"button\" @click=\"sendVerifyCode\" :disabled=\"sendingVerifyCode\">{{ sendingVerifyCode ?\r\n                        `${countdown}s` : '发送验证码' }}</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">密码</label>\r\n                <Password type=\"password\" id=\"password\" v-model=\"password\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">确认密码</label>\r\n                <Password type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" @blur=\"checkPassword\" />\r\n                <div class=\"error-message\" v-if=\"passwordError\">{{ passwordError }}</div>\r\n            </div>\r\n\r\n            <Button label=\"修改密码\" @click=\"registerbt\" />\r\n        </form>\r\n    </div>\r\n    <!-- 用于错误的消息的通知 -->\r\n    <div class=\"tongzhi\">\r\n        <!-- 用户注册 -->\r\n        <Message v-if=\"judchange == 1\" severity=\"success\">注册成功！</Message>\r\n        <Message v-if=\"judchange == -1\" severity=\"error\">注册失败</Message>\r\n    </div>\r\n</template>\r\n  \r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n//primevue\r\nimport SelectButton from 'primevue/selectbutton';\r\nimport InputText from 'primevue/inputtext';\r\nimport Button from 'primevue/button';\r\nimport Password from 'primevue/password';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Message from 'primevue/message';\r\n\r\nconst id = ref('');\r\nconst options = ref(['我是患者', '我是医生']);\r\nconst is_patient = ref('off');\r\nconst email = ref('');\r\nconst name = ref('');\r\nconst idCard = ref('');\r\nconst password = ref('');\r\nconst confirmPassword = ref('');\r\nconst verifyCode = ref('');\r\nconst emailError = ref('');\r\nconst passwordError = ref('');\r\n\r\nconst sendingVerifyCode = ref(false);\r\nconst countdown = ref(60);\r\nlet timer = null;\r\nconst department = ref('');\r\n\r\n//把邮箱给后端，后端发送验证码\r\nfunction sendtoback() {\r\n    axios.post('http://localhost:8080/send-to-back', {\r\n        email: email.value,\r\n    })\r\n        .then(response => {\r\n            console.log(response.data)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n        })\r\n}\r\nconst sendVerifyCode = () => {\r\n    //首先改一下消息的通知\r\n    judchange.value = 0;\r\n    // 发送验证码的逻辑\r\n    sendingVerifyCode.value = true;\r\n    timer = setInterval(() => {\r\n        if (countdown.value > 1) {\r\n            countdown.value--;\r\n        } else {\r\n            sendtoback();\r\n            clearInterval(timer);\r\n            timer = null;\r\n            countdown.value = 60;\r\n            sendingVerifyCode.value = false;\r\n        }\r\n    }, 1000);\r\n};\r\n\r\nconst checkPassword = () => {\r\n    if (password.value !== confirmPassword.value) {\r\n        passwordError.value = '两次密码输入不一致';\r\n    } else {\r\n        passwordError.value = '';\r\n    }\r\n};\r\n\r\n//判断传输是否成功的变量\r\nconst judchange = ref(0);\r\nfunction registerbt() {\r\n    //首先验证验证码\r\n    axios.post('http://localhost:8080/verify-code', {\r\n        email: email.value,\r\n        verifyCode: verifyCode.value,\r\n    })\r\n        .then(response => {\r\n            console.log(response.data)\r\n            judchange.value = 1;\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            judchange.value = -1;\r\n        })\r\n    if (is_patient == '我是医生') {\r\n        axios.post('http://localhost:8080//docter_changepwd', {\r\n            doctor_id: id.value,\r\n            doctor_pwd: password.value,\r\n        })\r\n            .then(response => {\r\n                console.log(response.data)\r\n                judchange.value = 1;\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n                judchange.value = -1;\r\n            })\r\n    }\r\n    else {\r\n        axios.post('http://localhost:8080//patient_changepwd', {\r\n            patient_id: id.value,\r\n            patient_pwd: password.value,\r\n        })\r\n            .then(response => {\r\n                console.log(response.data)\r\n                judchange.value = 1;\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n                judchange.value = -1;\r\n            })\r\n    }\r\n}\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n.register {\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.error-message {\r\n    color: red;\r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n}\r\n\r\ninput[type='email'],\r\ninput[type='password'],\r\ninput[type='text'] {\r\n    padding: 10px;\r\n    border-radius: 3px;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n.verify-code {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.verify-code input {\r\n    margin-right: 10px;\r\n}\r\n\r\n.verify-code button {\r\n    padding: 8px 10px;\r\n    border-radius: 3px;\r\n    border: none;\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    cursor: pointer;\r\n}\r\n\r\n.verify-code button:disabled {\r\n    background-color: #ddd;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.tongzhi {\r\n    position: absolute;\r\n    left: 600px;\r\n    width: 400px;\r\n    top: 20px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}