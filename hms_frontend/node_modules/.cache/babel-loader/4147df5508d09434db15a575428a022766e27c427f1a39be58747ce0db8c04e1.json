{"ast":null,"code":"import { ObjectUtils } from 'primevue/utils';\nimport { mergeProps } from 'vue';\nvar script = {\n  name: 'BaseComponent',\n  props: {\n    pt: {\n      type: Object,\n      default: undefined\n    }\n  },\n  methods: {\n    getOption(obj = {}, key = '') {\n      const fKey = ObjectUtils.convertToFlatCase(key);\n      return obj[Object.keys(obj).find(k => ObjectUtils.convertToFlatCase(k) === fKey) || ''];\n    },\n    getPTValue(obj = {}, key = '', params = {}) {\n      const self = ObjectUtils.getItemValue(this.getOption(obj, key), params);\n      const globalPT = ObjectUtils.getItemValue(this.getOption(this.defaultPT, key), params);\n      const merged = mergeProps(self, globalPT);\n      return merged;\n      /*\n       * @todo: The 'class' option in self can always be more powerful to style the component easily.\n       *\n       * return self && self['class'] ? { ...merged, ...{ class: self['class'] } } : merged;\n       */\n    },\n\n    ptm(key = '', params = {}) {\n      return this.getPTValue(this.pt, key, {\n        props: this.$props,\n        state: this.$data,\n        ...params\n      });\n    },\n    ptmo(obj = {}, key = '', params = {}) {\n      return this.getPTValue(obj, key, params);\n    }\n  },\n  computed: {\n    defaultPT() {\n      return ObjectUtils.getItemValue(this.getOption(this.$primevue.config.pt, this.$.type.name), this.defaultsParams);\n    },\n    defaultsParams() {\n      return {\n        instance: this.$\n      };\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["ObjectUtils","mergeProps","script","name","props","pt","type","Object","default","undefined","methods","getOption","obj","key","fKey","convertToFlatCase","keys","find","k","getPTValue","params","self","getItemValue","globalPT","defaultPT","merged","ptm","$props","state","$data","ptmo","computed","$primevue","config","$","defaultsParams","instance"],"sources":["D:/Desktop/HMS-front-end/hms_frontend/node_modules/primevue/basecomponent/basecomponent.esm.js"],"sourcesContent":["import { ObjectUtils } from 'primevue/utils';\nimport { mergeProps } from 'vue';\n\nvar script = {\n    name: 'BaseComponent',\n    props: {\n        pt: {\n            type: Object,\n            default: undefined\n        }\n    },\n    methods: {\n        getOption(obj = {}, key = '') {\n            const fKey = ObjectUtils.convertToFlatCase(key);\n\n            return obj[Object.keys(obj).find((k) => ObjectUtils.convertToFlatCase(k) === fKey) || ''];\n        },\n        getPTValue(obj = {}, key = '', params = {}) {\n            const self = ObjectUtils.getItemValue(this.getOption(obj, key), params);\n            const globalPT = ObjectUtils.getItemValue(this.getOption(this.defaultPT, key), params);\n            const merged = mergeProps(self, globalPT);\n\n            return merged;\n            /*\n             * @todo: The 'class' option in self can always be more powerful to style the component easily.\n             *\n             * return self && self['class'] ? { ...merged, ...{ class: self['class'] } } : merged;\n             */\n        },\n        ptm(key = '', params = {}) {\n            return this.getPTValue(this.pt, key, { props: this.$props, state: this.$data, ...params });\n        },\n        ptmo(obj = {}, key = '', params = {}) {\n            return this.getPTValue(obj, key, params);\n        }\n    },\n    computed: {\n        defaultPT() {\n            return ObjectUtils.getItemValue(this.getOption(this.$primevue.config.pt, this.$.type.name), this.defaultsParams);\n        },\n        defaultsParams() {\n            return { instance: this.$ };\n        }\n    }\n};\n\nexport { script as default };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,KAAK;AAEhC,IAAIC,MAAM,GAAG;EACTC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACHC,EAAE,EAAE;MACAC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEC;IACb;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,SAASA,CAACC,GAAG,GAAG,CAAC,CAAC,EAAEC,GAAG,GAAG,EAAE,EAAE;MAC1B,MAAMC,IAAI,GAAGd,WAAW,CAACe,iBAAiB,CAACF,GAAG,CAAC;MAE/C,OAAOD,GAAG,CAACL,MAAM,CAACS,IAAI,CAACJ,GAAG,CAAC,CAACK,IAAI,CAAEC,CAAC,IAAKlB,WAAW,CAACe,iBAAiB,CAACG,CAAC,CAAC,KAAKJ,IAAI,CAAC,IAAI,EAAE,CAAC;IAC7F,CAAC;IACDK,UAAUA,CAACP,GAAG,GAAG,CAAC,CAAC,EAAEC,GAAG,GAAG,EAAE,EAAEO,MAAM,GAAG,CAAC,CAAC,EAAE;MACxC,MAAMC,IAAI,GAAGrB,WAAW,CAACsB,YAAY,CAAC,IAAI,CAACX,SAAS,CAACC,GAAG,EAAEC,GAAG,CAAC,EAAEO,MAAM,CAAC;MACvE,MAAMG,QAAQ,GAAGvB,WAAW,CAACsB,YAAY,CAAC,IAAI,CAACX,SAAS,CAAC,IAAI,CAACa,SAAS,EAAEX,GAAG,CAAC,EAAEO,MAAM,CAAC;MACtF,MAAMK,MAAM,GAAGxB,UAAU,CAACoB,IAAI,EAAEE,QAAQ,CAAC;MAEzC,OAAOE,MAAM;MACb;AACZ;AACA;AACA;AACA;IACQ,CAAC;;IACDC,GAAGA,CAACb,GAAG,GAAG,EAAE,EAAEO,MAAM,GAAG,CAAC,CAAC,EAAE;MACvB,OAAO,IAAI,CAACD,UAAU,CAAC,IAAI,CAACd,EAAE,EAAEQ,GAAG,EAAE;QAAET,KAAK,EAAE,IAAI,CAACuB,MAAM;QAAEC,KAAK,EAAE,IAAI,CAACC,KAAK;QAAE,GAAGT;MAAO,CAAC,CAAC;IAC9F,CAAC;IACDU,IAAIA,CAAClB,GAAG,GAAG,CAAC,CAAC,EAAEC,GAAG,GAAG,EAAE,EAAEO,MAAM,GAAG,CAAC,CAAC,EAAE;MAClC,OAAO,IAAI,CAACD,UAAU,CAACP,GAAG,EAAEC,GAAG,EAAEO,MAAM,CAAC;IAC5C;EACJ,CAAC;EACDW,QAAQ,EAAE;IACNP,SAASA,CAAA,EAAG;MACR,OAAOxB,WAAW,CAACsB,YAAY,CAAC,IAAI,CAACX,SAAS,CAAC,IAAI,CAACqB,SAAS,CAACC,MAAM,CAAC5B,EAAE,EAAE,IAAI,CAAC6B,CAAC,CAAC5B,IAAI,CAACH,IAAI,CAAC,EAAE,IAAI,CAACgC,cAAc,CAAC;IACpH,CAAC;IACDA,cAAcA,CAAA,EAAG;MACb,OAAO;QAAEC,QAAQ,EAAE,IAAI,CAACF;MAAE,CAAC;IAC/B;EACJ;AACJ,CAAC;AAED,SAAShC,MAAM,IAAIM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}