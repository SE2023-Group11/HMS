{"ast":null,"code":"import BaseComponent from 'primevue/basecomponent';\nimport SpinnerIcon from 'primevue/icons/spinner';\nimport { DomHandler } from 'primevue/utils';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, renderSlot, createElementVNode, Fragment, renderList, createCommentVNode, createVNode } from 'vue';\nvar script = {\n  name: 'VirtualScroller',\n  extends: BaseComponent,\n  emits: ['update:numToleratedItems', 'scroll', 'scroll-index-change', 'lazy-load'],\n  props: {\n    id: {\n      type: String,\n      default: null\n    },\n    style: null,\n    class: null,\n    items: {\n      type: Array,\n      default: null\n    },\n    itemSize: {\n      type: [Number, Array],\n      default: 0\n    },\n    scrollHeight: null,\n    scrollWidth: null,\n    orientation: {\n      type: String,\n      default: 'vertical'\n    },\n    numToleratedItems: {\n      type: Number,\n      default: null\n    },\n    delay: {\n      type: Number,\n      default: 0\n    },\n    resizeDelay: {\n      type: Number,\n      default: 10\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    loaderDisabled: {\n      type: Boolean,\n      default: false\n    },\n    columns: {\n      type: Array,\n      default: null\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    showSpacer: {\n      type: Boolean,\n      default: true\n    },\n    showLoader: {\n      type: Boolean,\n      default: false\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    step: {\n      type: Number,\n      default: 0\n    },\n    appendOnly: {\n      type: Boolean,\n      default: false\n    },\n    autoSize: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      first: this.isBoth() ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      last: this.isBoth() ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      page: this.isBoth() ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      numItemsInViewport: this.isBoth() ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      lastScrollPos: this.isBoth() ? {\n        top: 0,\n        left: 0\n      } : 0,\n      d_numToleratedItems: this.numToleratedItems,\n      d_loading: this.loading,\n      loaderArr: [],\n      spacerStyle: {},\n      contentStyle: {}\n    };\n  },\n  element: null,\n  content: null,\n  lastScrollPos: null,\n  scrollTimeout: null,\n  resizeTimeout: null,\n  defaultWidth: 0,\n  defaultHeight: 0,\n  defaultContentWidth: 0,\n  defaultContentHeight: 0,\n  isRangeChanged: false,\n  lazyLoadState: {},\n  resizeListener: null,\n  initialized: false,\n  watch: {\n    numToleratedItems(newValue) {\n      this.d_numToleratedItems = newValue;\n    },\n    loading(newValue) {\n      this.d_loading = newValue;\n    },\n    items(newValue, oldValue) {\n      if (!oldValue || oldValue.length !== (newValue || []).length) {\n        this.init();\n        this.calculateAutoSize();\n      }\n    },\n    itemSize() {\n      this.init();\n      this.calculateAutoSize();\n    },\n    orientation() {\n      this.lastScrollPos = this.isBoth() ? {\n        top: 0,\n        left: 0\n      } : 0;\n    },\n    scrollHeight() {\n      this.init();\n      this.calculateAutoSize();\n    },\n    scrollWidth() {\n      this.init();\n      this.calculateAutoSize();\n    }\n  },\n  mounted() {\n    this.viewInit();\n    this.lastScrollPos = this.isBoth() ? {\n      top: 0,\n      left: 0\n    } : 0;\n    this.lazyLoadState = this.lazyLoadState || {};\n  },\n  updated() {\n    !this.initialized && this.viewInit();\n  },\n  unmounted() {\n    this.unbindResizeListener();\n    this.initialized = false;\n  },\n  methods: {\n    viewInit() {\n      if (DomHandler.isVisible(this.element)) {\n        this.setContentEl(this.content);\n        this.init();\n        this.bindResizeListener();\n        this.defaultWidth = DomHandler.getWidth(this.element);\n        this.defaultHeight = DomHandler.getHeight(this.element);\n        this.defaultContentWidth = DomHandler.getWidth(this.content);\n        this.defaultContentHeight = DomHandler.getHeight(this.content);\n        this.initialized = true;\n      }\n    },\n    init() {\n      if (!this.disabled) {\n        this.setSize();\n        this.calculateOptions();\n        this.setSpacerSize();\n      }\n    },\n    isVertical() {\n      return this.orientation === 'vertical';\n    },\n    isHorizontal() {\n      return this.orientation === 'horizontal';\n    },\n    isBoth() {\n      return this.orientation === 'both';\n    },\n    scrollTo(options) {\n      this.lastScrollPos = this.both ? {\n        top: 0,\n        left: 0\n      } : 0;\n      this.element && this.element.scrollTo(options);\n    },\n    scrollToIndex(index, behavior = 'auto') {\n      const both = this.isBoth();\n      const horizontal = this.isHorizontal();\n      const first = this.first;\n      const {\n        numToleratedItems\n      } = this.calculateNumItems();\n      const contentPos = this.getContentPosition();\n      const itemSize = this.itemSize;\n      const calculateFirst = (_index = 0, _numT) => _index <= _numT ? 0 : _index;\n      const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n      const scrollTo = (left = 0, top = 0) => this.scrollTo({\n        left,\n        top,\n        behavior\n      });\n      let newFirst = both ? {\n        rows: 0,\n        cols: 0\n      } : 0;\n      let isRangeChanged = false;\n      if (both) {\n        newFirst = {\n          rows: calculateFirst(index[0], numToleratedItems[0]),\n          cols: calculateFirst(index[1], numToleratedItems[1])\n        };\n        scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n        isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n      } else {\n        newFirst = calculateFirst(index, numToleratedItems);\n        horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), 0) : scrollTo(0, calculateCoord(newFirst, itemSize, contentPos.top));\n        isRangeChanged = newFirst !== first;\n      }\n      this.isRangeChanged = isRangeChanged;\n      this.first = newFirst;\n    },\n    scrollInView(index, to, behavior = 'auto') {\n      if (to) {\n        const both = this.isBoth();\n        const horizontal = this.isHorizontal();\n        const {\n          first,\n          viewport\n        } = this.getRenderedRange();\n        const scrollTo = (left = 0, top = 0) => this.scrollTo({\n          left,\n          top,\n          behavior\n        });\n        const isToStart = to === 'to-start';\n        const isToEnd = to === 'to-end';\n        if (isToStart) {\n          if (both) {\n            if (viewport.first.rows - first.rows > index[0]) {\n              scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows - 1) * this.itemSize[0]);\n            } else if (viewport.first.cols - first.cols > index[1]) {\n              scrollTo((viewport.first.cols - 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n            }\n          } else {\n            if (viewport.first - first > index) {\n              const pos = (viewport.first - 1) * this.itemSize;\n              horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n            }\n          }\n        } else if (isToEnd) {\n          if (both) {\n            if (viewport.last.rows - first.rows <= index[0] + 1) {\n              scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows + 1) * this.itemSize[0]);\n            } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n              scrollTo((viewport.first.cols + 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n            }\n          } else {\n            if (viewport.last - first <= index + 1) {\n              const pos = (viewport.first + 1) * this.itemSize;\n              horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n            }\n          }\n        }\n      } else {\n        this.scrollToIndex(index, behavior);\n      }\n    },\n    getRenderedRange() {\n      const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n      let firstInViewport = this.first;\n      let lastInViewport = 0;\n      if (this.element) {\n        const both = this.isBoth();\n        const horizontal = this.isHorizontal();\n        const {\n          scrollTop,\n          scrollLeft\n        } = this.element.scrollTop;\n        if (both) {\n          firstInViewport = {\n            rows: calculateFirstInViewport(scrollTop, this.itemSize[0]),\n            cols: calculateFirstInViewport(scrollLeft, this.itemSize[1])\n          };\n          lastInViewport = {\n            rows: firstInViewport.rows + this.numItemsInViewport.rows,\n            cols: firstInViewport.cols + this.numItemsInViewport.cols\n          };\n        } else {\n          const scrollPos = horizontal ? scrollLeft : scrollTop;\n          firstInViewport = calculateFirstInViewport(scrollPos, this.itemSize);\n          lastInViewport = firstInViewport + this.numItemsInViewport;\n        }\n      }\n      return {\n        first: this.first,\n        last: this.last,\n        viewport: {\n          first: firstInViewport,\n          last: lastInViewport\n        }\n      };\n    },\n    calculateNumItems() {\n      const both = this.isBoth();\n      const horizontal = this.isHorizontal();\n      const itemSize = this.itemSize;\n      const contentPos = this.getContentPosition();\n      const contentWidth = this.element ? this.element.offsetWidth - contentPos.left : 0;\n      const contentHeight = this.element ? this.element.offsetHeight - contentPos.top : 0;\n      const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n      const calculateNumToleratedItems = _numItems => Math.ceil(_numItems / 2);\n      const numItemsInViewport = both ? {\n        rows: calculateNumItemsInViewport(contentHeight, itemSize[0]),\n        cols: calculateNumItemsInViewport(contentWidth, itemSize[1])\n      } : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, itemSize);\n      const numToleratedItems = this.d_numToleratedItems || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n      return {\n        numItemsInViewport,\n        numToleratedItems\n      };\n    },\n    calculateOptions() {\n      const both = this.isBoth();\n      const first = this.first;\n      const {\n        numItemsInViewport,\n        numToleratedItems\n      } = this.calculateNumItems();\n      const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n      const last = both ? {\n        rows: calculateLast(first.rows, numItemsInViewport.rows, numToleratedItems[0]),\n        cols: calculateLast(first.cols, numItemsInViewport.cols, numToleratedItems[1], true)\n      } : calculateLast(first, numItemsInViewport, numToleratedItems);\n      this.last = last;\n      this.numItemsInViewport = numItemsInViewport;\n      this.d_numToleratedItems = numToleratedItems;\n      this.$emit('update:numToleratedItems', this.d_numToleratedItems);\n      if (this.showLoader) {\n        this.loaderArr = both ? Array.from({\n          length: numItemsInViewport.rows\n        }).map(() => Array.from({\n          length: numItemsInViewport.cols\n        })) : Array.from({\n          length: numItemsInViewport\n        });\n      }\n      if (this.lazy) {\n        Promise.resolve().then(() => {\n          this.lazyLoadState = {\n            first: this.step ? both ? {\n              rows: 0,\n              cols: first.cols\n            } : 0 : first,\n            last: Math.min(this.step ? this.step : last, this.items.length)\n          };\n          this.$emit('lazy-load', this.lazyLoadState);\n        });\n      }\n    },\n    calculateAutoSize() {\n      if (this.autoSize && !this.d_loading) {\n        Promise.resolve().then(() => {\n          if (this.content) {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const vertical = this.isVertical();\n            this.content.style.minHeight = this.content.style.minWidth = 'auto';\n            this.content.style.position = 'relative';\n            this.element.style.contain = 'none';\n            const [contentWidth, contentHeight] = [DomHandler.getWidth(this.content), DomHandler.getHeight(this.content)];\n            contentWidth !== this.defaultContentWidth && (this.element.style.width = '');\n            contentHeight !== this.defaultContentHeight && (this.element.style.height = '');\n            const [width, height] = [DomHandler.getWidth(this.element), DomHandler.getHeight(this.element)];\n            (both || horizontal) && (this.element.style.width = width < this.defaultWidth ? width + 'px' : this.scrollWidth || this.defaultWidth + 'px');\n            (both || vertical) && (this.element.style.height = height < this.defaultHeight ? height + 'px' : this.scrollHeight || this.defaultHeight + 'px');\n            this.content.style.minHeight = this.content.style.minWidth = '';\n            this.content.style.position = '';\n            this.element.style.contain = '';\n          }\n        });\n      }\n    },\n    getLast(last = 0, isCols) {\n      return this.items ? Math.min(isCols ? (this.columns || this.items[0]).length : this.items.length, last) : 0;\n    },\n    getContentPosition() {\n      if (this.content) {\n        const style = getComputedStyle(this.content);\n        const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n        const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n        const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n        const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n        return {\n          left,\n          right,\n          top,\n          bottom,\n          x: left + right,\n          y: top + bottom\n        };\n      }\n      return {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    setSize() {\n      if (this.element) {\n        const both = this.isBoth();\n        const horizontal = this.isHorizontal();\n        const parentElement = this.element.parentElement;\n        const width = this.scrollWidth || `${this.element.offsetWidth || parentElement.offsetWidth}px`;\n        const height = this.scrollHeight || `${this.element.offsetHeight || parentElement.offsetHeight}px`;\n        const setProp = (_name, _value) => this.element.style[_name] = _value;\n        if (both || horizontal) {\n          setProp('height', height);\n          setProp('width', width);\n        } else {\n          setProp('height', height);\n        }\n      }\n    },\n    setSpacerSize() {\n      const items = this.items;\n      if (items) {\n        const both = this.isBoth();\n        const horizontal = this.isHorizontal();\n        const contentPos = this.getContentPosition();\n        const setProp = (_name, _value, _size, _cpos = 0) => this.spacerStyle = {\n          ...this.spacerStyle,\n          ...{\n            [`${_name}`]: (_value || []).length * _size + _cpos + 'px'\n          }\n        };\n        if (both) {\n          setProp('height', items, this.itemSize[0], contentPos.y);\n          setProp('width', this.columns || items[1], this.itemSize[1], contentPos.x);\n        } else {\n          horizontal ? setProp('width', this.columns || items, this.itemSize, contentPos.x) : setProp('height', items, this.itemSize, contentPos.y);\n        }\n      }\n    },\n    setContentPosition(pos) {\n      if (this.content && !this.appendOnly) {\n        const both = this.isBoth();\n        const horizontal = this.isHorizontal();\n        const first = pos ? pos.first : this.first;\n        const calculateTranslateVal = (_first, _size) => _first * _size;\n        const setTransform = (_x = 0, _y = 0) => this.contentStyle = {\n          ...this.contentStyle,\n          ...{\n            transform: `translate3d(${_x}px, ${_y}px, 0)`\n          }\n        };\n        if (both) {\n          setTransform(calculateTranslateVal(first.cols, this.itemSize[1]), calculateTranslateVal(first.rows, this.itemSize[0]));\n        } else {\n          const translateVal = calculateTranslateVal(first, this.itemSize);\n          horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n        }\n      }\n    },\n    onScrollPositionChange(event) {\n      const target = event.target;\n      const both = this.isBoth();\n      const horizontal = this.isHorizontal();\n      const contentPos = this.getContentPosition();\n      const calculateScrollPos = (_pos, _cpos) => _pos ? _pos > _cpos ? _pos - _cpos : _pos : 0;\n      const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n      const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n        return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n      };\n      const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n        if (_currentIndex <= _numT) return 0;else return Math.max(0, _isScrollDownOrRight ? _currentIndex < _triggerIndex ? _first : _currentIndex - _numT : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n      };\n      const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols) => {\n        let lastValue = _first + _num + 2 * _numT;\n        if (_currentIndex >= _numT) {\n          lastValue += _numT + 1;\n        }\n        return this.getLast(lastValue, _isCols);\n      };\n      const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n      const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n      let newFirst = both ? {\n        rows: 0,\n        cols: 0\n      } : 0;\n      let newLast = this.last;\n      let isRangeChanged = false;\n      let newScrollPos = this.lastScrollPos;\n      if (both) {\n        const isScrollDown = this.lastScrollPos.top <= scrollTop;\n        const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n        if (!this.appendOnly || this.appendOnly && (isScrollDown || isScrollRight)) {\n          const currentIndex = {\n            rows: calculateCurrentIndex(scrollTop, this.itemSize[0]),\n            cols: calculateCurrentIndex(scrollLeft, this.itemSize[1])\n          };\n          const triggerIndex = {\n            rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n            cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n          };\n          newFirst = {\n            rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n            cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n          };\n          newLast = {\n            rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n            cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n          };\n          isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n          newScrollPos = {\n            top: scrollTop,\n            left: scrollLeft\n          };\n        }\n      } else {\n        const scrollPos = horizontal ? scrollLeft : scrollTop;\n        const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n        if (!this.appendOnly || this.appendOnly && isScrollDownOrRight) {\n          const currentIndex = calculateCurrentIndex(scrollPos, this.itemSize);\n          const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n          newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n          newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n          isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n          newScrollPos = scrollPos;\n        }\n      }\n      return {\n        first: newFirst,\n        last: newLast,\n        isRangeChanged,\n        scrollPos: newScrollPos\n      };\n    },\n    onScrollChange(event) {\n      const {\n        first,\n        last,\n        isRangeChanged,\n        scrollPos\n      } = this.onScrollPositionChange(event);\n      if (isRangeChanged) {\n        const newState = {\n          first,\n          last\n        };\n        this.setContentPosition(newState);\n        this.first = first;\n        this.last = last;\n        this.lastScrollPos = scrollPos;\n        this.$emit('scroll-index-change', newState);\n        if (this.lazy && this.isPageChanged(first)) {\n          const lazyLoadState = {\n            first: this.step ? Math.min(this.getPageByFirst(first) * this.step, this.items.length - this.step) : first,\n            last: Math.min(this.step ? (this.getPageByFirst(first) + 1) * this.step : last, this.items.length)\n          };\n          const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n          isLazyStateChanged && this.$emit('lazy-load', lazyLoadState);\n          this.lazyLoadState = lazyLoadState;\n        }\n      }\n    },\n    onScroll(event) {\n      this.$emit('scroll', event);\n      if (this.delay && this.isPageChanged()) {\n        if (this.scrollTimeout) {\n          clearTimeout(this.scrollTimeout);\n        }\n        if (!this.d_loading && this.showLoader) {\n          const {\n            isRangeChanged\n          } = this.onScrollPositionChange(event);\n          const changed = isRangeChanged || (this.step ? this.isPageChanged() : false);\n          changed && (this.d_loading = true);\n        }\n        this.scrollTimeout = setTimeout(() => {\n          this.onScrollChange(event);\n          if (this.d_loading && this.showLoader && (!this.lazy || this.loading === undefined)) {\n            this.d_loading = false;\n            this.page = this.getPageByFirst();\n          }\n        }, this.delay);\n      } else {\n        this.onScrollChange(event);\n      }\n    },\n    onResize() {\n      if (this.resizeTimeout) {\n        clearTimeout(this.resizeTimeout);\n      }\n      this.resizeTimeout = setTimeout(() => {\n        if (DomHandler.isVisible(this.element)) {\n          const both = this.isBoth();\n          const vertical = this.isVertical();\n          const horizontal = this.isHorizontal();\n          const [width, height] = [DomHandler.getWidth(this.element), DomHandler.getHeight(this.element)];\n          const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n          const reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n          if (reinit) {\n            this.d_numToleratedItems = this.numToleratedItems;\n            this.defaultWidth = width;\n            this.defaultHeight = height;\n            this.defaultContentWidth = DomHandler.getWidth(this.content);\n            this.defaultContentHeight = DomHandler.getHeight(this.content);\n            this.init();\n          }\n        }\n      }, this.resizeDelay);\n    },\n    bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = this.onResize.bind(this);\n        window.addEventListener('resize', this.resizeListener);\n        window.addEventListener('orientationchange', this.resizeListener);\n      }\n    },\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        window.removeEventListener('orientationchange', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    getOptions(renderedIndex) {\n      const count = (this.items || []).length;\n      const index = this.isBoth() ? this.first.rows + renderedIndex : this.first + renderedIndex;\n      return {\n        index,\n        count,\n        first: index === 0,\n        last: index === count - 1,\n        even: index % 2 === 0,\n        odd: index % 2 !== 0\n      };\n    },\n    getLoaderOptions(index, extOptions) {\n      let count = this.loaderArr.length;\n      return {\n        index,\n        count,\n        first: index === 0,\n        last: index === count - 1,\n        even: index % 2 === 0,\n        odd: index % 2 !== 0,\n        ...extOptions\n      };\n    },\n    getPageByFirst(first) {\n      return Math.floor(((first ?? this.first) + this.d_numToleratedItems * 4) / (this.step || 1));\n    },\n    isPageChanged(first) {\n      return this.step ? this.page !== this.getPageByFirst(first ?? this.first) : true;\n    },\n    setContentEl(el) {\n      this.content = el || this.content || DomHandler.findSingle(this.element, '.p-virtualscroller-content');\n    },\n    elementRef(el) {\n      this.element = el;\n    },\n    contentRef(el) {\n      this.content = el;\n    }\n  },\n  computed: {\n    containerClass() {\n      return ['p-virtualscroller', {\n        'p-virtualscroller-inline': this.inline,\n        'p-virtualscroller-both p-both-scroll': this.isBoth(),\n        'p-virtualscroller-horizontal p-horizontal-scroll': this.isHorizontal()\n      }, this.class];\n    },\n    contentClass() {\n      return ['p-virtualscroller-content', {\n        'p-virtualscroller-loading': this.d_loading\n      }];\n    },\n    loaderClass() {\n      return ['p-virtualscroller-loader', {\n        'p-component-overlay': !this.$slots.loader\n      }];\n    },\n    loadedItems() {\n      if (this.items && !this.d_loading) {\n        if (this.isBoth()) return this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map(item => this.columns ? item : item.slice(this.appendOnly ? 0 : this.first.cols, this.last.cols));else if (this.isHorizontal() && this.columns) return this.items;else return this.items.slice(this.appendOnly ? 0 : this.first, this.last);\n      }\n      return [];\n    },\n    loadedRows() {\n      return this.d_loading ? this.loaderDisabled ? this.loaderArr : [] : this.loadedItems;\n    },\n    loadedColumns() {\n      if (this.columns) {\n        const both = this.isBoth();\n        const horizontal = this.isHorizontal();\n        if (both || horizontal) {\n          return this.d_loading && this.loaderDisabled ? both ? this.loaderArr[0] : this.loaderArr : this.columns.slice(both ? this.first.cols : this.first, both ? this.last.cols : this.last);\n        }\n      }\n      return this.columns;\n    }\n  },\n  components: {\n    SpinnerIcon: SpinnerIcon\n  }\n};\nconst _hoisted_1 = [\"tabindex\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SpinnerIcon = resolveComponent(\"SpinnerIcon\");\n  return !$props.disabled ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    ref: $options.elementRef,\n    class: $options.containerClass,\n    tabindex: $props.tabindex,\n    style: $props.style,\n    onScroll: _cache[0] || (_cache[0] = (...args) => $options.onScroll && $options.onScroll(...args))\n  }, _ctx.ptm('root')), [renderSlot(_ctx.$slots, \"content\", {\n    styleClass: $options.contentClass,\n    items: $options.loadedItems,\n    getItemOptions: $options.getOptions,\n    loading: $data.d_loading,\n    getLoaderOptions: $options.getLoaderOptions,\n    itemSize: $props.itemSize,\n    rows: $options.loadedRows,\n    columns: $options.loadedColumns,\n    contentRef: $options.contentRef,\n    spacerStyle: $data.spacerStyle,\n    contentStyle: $data.contentStyle,\n    vertical: $options.isVertical(),\n    horizontal: $options.isHorizontal(),\n    both: $options.isBoth()\n  }, () => [createElementVNode(\"div\", mergeProps({\n    ref: $options.contentRef,\n    class: $options.contentClass,\n    style: $data.contentStyle\n  }, _ctx.ptm('content')), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.loadedItems, (item, index) => {\n    return renderSlot(_ctx.$slots, \"item\", {\n      key: index,\n      item: item,\n      options: $options.getOptions(index)\n    });\n  }), 128))], 16)]), $props.showSpacer ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    class: \"p-virtualscroller-spacer\",\n    style: $data.spacerStyle\n  }, _ctx.ptm('spacer')), null, 16)) : createCommentVNode(\"\", true), !$props.loaderDisabled && $props.showLoader && $data.d_loading ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    class: $options.loaderClass\n  }, _ctx.ptm('loader')), [_ctx.$slots && _ctx.$slots.loader ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList($data.loaderArr, (_, index) => {\n    return renderSlot(_ctx.$slots, \"loader\", {\n      key: index,\n      options: $options.getLoaderOptions(index, $options.isBoth() && {\n        numCols: _ctx.d_numItemsInViewport.cols\n      })\n    });\n  }), 128)) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"loadingicon\", {}, () => [createVNode(_component_SpinnerIcon, mergeProps({\n    spin: \"\",\n    class: \"p-virtualscroller-loading-icon\"\n  }, _ctx.ptm('loadingIcon')), null, 16)])], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_1)) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"content\", {\n    items: $props.items,\n    rows: $props.items,\n    columns: $options.loadedColumns\n  })], 64));\n}\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css_248z = \"\\n.p-virtualscroller {\\n    position: relative;\\n    overflow: auto;\\n    contain: strict;\\n    transform: translateZ(0);\\n    will-change: scroll-position;\\n    outline: 0 none;\\n}\\n.p-virtualscroller-content {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    /* contain: content; */\\n    min-height: 100%;\\n    min-width: 100%;\\n    will-change: transform;\\n}\\n.p-virtualscroller-spacer {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 1px;\\n    width: 1px;\\n    transform-origin: 0 0;\\n    pointer-events: none;\\n}\\n.p-virtualscroller .p-virtualscroller-loader {\\n    position: sticky;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n.p-virtualscroller-loader.p-component-overlay {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n.p-virtualscroller-loading-icon {\\n    font-size: 2rem;\\n}\\n.p-virtualscroller-loading-icon.p-icon {\\n    width: 2rem;\\n    height: 2rem;\\n}\\n.p-virtualscroller-horizontal > .p-virtualscroller-content {\\n    display: flex;\\n}\\n\\n/* Inline */\\n.p-virtualscroller-inline .p-virtualscroller-content {\\n    position: static;\\n}\\n\";\nstyleInject(css_248z);\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["BaseComponent","SpinnerIcon","DomHandler","resolveComponent","openBlock","createElementBlock","mergeProps","renderSlot","createElementVNode","Fragment","renderList","createCommentVNode","createVNode","script","name","extends","emits","props","id","type","String","default","style","class","items","Array","itemSize","Number","scrollHeight","scrollWidth","orientation","numToleratedItems","delay","resizeDelay","lazy","Boolean","disabled","loaderDisabled","columns","loading","showSpacer","showLoader","tabindex","inline","step","appendOnly","autoSize","data","first","isBoth","rows","cols","last","page","numItemsInViewport","lastScrollPos","top","left","d_numToleratedItems","d_loading","loaderArr","spacerStyle","contentStyle","element","content","scrollTimeout","resizeTimeout","defaultWidth","defaultHeight","defaultContentWidth","defaultContentHeight","isRangeChanged","lazyLoadState","resizeListener","initialized","watch","newValue","oldValue","length","init","calculateAutoSize","mounted","viewInit","updated","unmounted","unbindResizeListener","methods","isVisible","setContentEl","bindResizeListener","getWidth","getHeight","setSize","calculateOptions","setSpacerSize","isVertical","isHorizontal","scrollTo","options","both","scrollToIndex","index","behavior","horizontal","calculateNumItems","contentPos","getContentPosition","calculateFirst","_index","_numT","calculateCoord","_first","_size","_cpos","newFirst","scrollInView","to","viewport","getRenderedRange","isToStart","isToEnd","pos","calculateFirstInViewport","_pos","Math","floor","firstInViewport","lastInViewport","scrollTop","scrollLeft","scrollPos","contentWidth","offsetWidth","contentHeight","offsetHeight","calculateNumItemsInViewport","_contentSize","_itemSize","ceil","calculateNumToleratedItems","_numItems","calculateLast","_num","_isCols","getLast","$emit","from","map","Promise","resolve","then","min","vertical","minHeight","minWidth","position","contain","width","height","isCols","getComputedStyle","parseFloat","paddingLeft","max","right","paddingRight","paddingTop","bottom","paddingBottom","x","y","parentElement","setProp","_name","_value","setContentPosition","calculateTranslateVal","setTransform","_x","_y","transform","translateVal","onScrollPositionChange","event","target","calculateScrollPos","calculateCurrentIndex","calculateTriggerIndex","_currentIndex","_last","_isScrollDownOrRight","_triggerIndex","lastValue","newLast","newScrollPos","isScrollDown","isScrollRight","currentIndex","triggerIndex","isScrollDownOrRight","onScrollChange","newState","isPageChanged","getPageByFirst","isLazyStateChanged","onScroll","clearTimeout","changed","setTimeout","undefined","onResize","isDiffWidth","isDiffHeight","reinit","bind","window","addEventListener","removeEventListener","getOptions","renderedIndex","count","even","odd","getLoaderOptions","extOptions","el","findSingle","elementRef","contentRef","computed","containerClass","contentClass","loaderClass","$slots","loader","loadedItems","slice","item","loadedRows","loadedColumns","components","_hoisted_1","render","_ctx","_cache","$props","$setup","$data","$options","_component_SpinnerIcon","key","ref","args","ptm","styleClass","getItemOptions","_","numCols","d_numItemsInViewport","spin","styleInject","css","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","css_248z"],"sources":["D:/Desktop/HMS-front-end/hms_frontend/node_modules/primevue/virtualscroller/virtualscroller.esm.js"],"sourcesContent":["import BaseComponent from 'primevue/basecomponent';\nimport SpinnerIcon from 'primevue/icons/spinner';\nimport { DomHandler } from 'primevue/utils';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, renderSlot, createElementVNode, Fragment, renderList, createCommentVNode, createVNode } from 'vue';\n\nvar script = {\n    name: 'VirtualScroller',\n    extends: BaseComponent,\n    emits: ['update:numToleratedItems', 'scroll', 'scroll-index-change', 'lazy-load'],\n    props: {\n        id: {\n            type: String,\n            default: null\n        },\n        style: null,\n        class: null,\n        items: {\n            type: Array,\n            default: null\n        },\n        itemSize: {\n            type: [Number, Array],\n            default: 0\n        },\n        scrollHeight: null,\n        scrollWidth: null,\n        orientation: {\n            type: String,\n            default: 'vertical'\n        },\n        numToleratedItems: {\n            type: Number,\n            default: null\n        },\n        delay: {\n            type: Number,\n            default: 0\n        },\n        resizeDelay: {\n            type: Number,\n            default: 10\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        loaderDisabled: {\n            type: Boolean,\n            default: false\n        },\n        columns: {\n            type: Array,\n            default: null\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        showSpacer: {\n            type: Boolean,\n            default: true\n        },\n        showLoader: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        step: {\n            type: Number,\n            default: 0\n        },\n        appendOnly: {\n            type: Boolean,\n            default: false\n        },\n        autoSize: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            first: this.isBoth() ? { rows: 0, cols: 0 } : 0,\n            last: this.isBoth() ? { rows: 0, cols: 0 } : 0,\n            page: this.isBoth() ? { rows: 0, cols: 0 } : 0,\n            numItemsInViewport: this.isBoth() ? { rows: 0, cols: 0 } : 0,\n            lastScrollPos: this.isBoth() ? { top: 0, left: 0 } : 0,\n            d_numToleratedItems: this.numToleratedItems,\n            d_loading: this.loading,\n            loaderArr: [],\n            spacerStyle: {},\n            contentStyle: {}\n        };\n    },\n    element: null,\n    content: null,\n    lastScrollPos: null,\n    scrollTimeout: null,\n    resizeTimeout: null,\n    defaultWidth: 0,\n    defaultHeight: 0,\n    defaultContentWidth: 0,\n    defaultContentHeight: 0,\n    isRangeChanged: false,\n    lazyLoadState: {},\n    resizeListener: null,\n    initialized: false,\n    watch: {\n        numToleratedItems(newValue) {\n            this.d_numToleratedItems = newValue;\n        },\n        loading(newValue) {\n            this.d_loading = newValue;\n        },\n        items(newValue, oldValue) {\n            if (!oldValue || oldValue.length !== (newValue || []).length) {\n                this.init();\n                this.calculateAutoSize();\n            }\n        },\n        itemSize() {\n            this.init();\n            this.calculateAutoSize();\n        },\n        orientation() {\n            this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;\n        },\n        scrollHeight() {\n            this.init();\n            this.calculateAutoSize();\n        },\n        scrollWidth() {\n            this.init();\n            this.calculateAutoSize();\n        }\n    },\n    mounted() {\n        this.viewInit();\n\n        this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;\n        this.lazyLoadState = this.lazyLoadState || {};\n    },\n    updated() {\n        !this.initialized && this.viewInit();\n    },\n    unmounted() {\n        this.unbindResizeListener();\n\n        this.initialized = false;\n    },\n    methods: {\n        viewInit() {\n            if (DomHandler.isVisible(this.element)) {\n                this.setContentEl(this.content);\n                this.init();\n                this.bindResizeListener();\n\n                this.defaultWidth = DomHandler.getWidth(this.element);\n                this.defaultHeight = DomHandler.getHeight(this.element);\n                this.defaultContentWidth = DomHandler.getWidth(this.content);\n                this.defaultContentHeight = DomHandler.getHeight(this.content);\n                this.initialized = true;\n            }\n        },\n        init() {\n            if (!this.disabled) {\n                this.setSize();\n                this.calculateOptions();\n                this.setSpacerSize();\n            }\n        },\n        isVertical() {\n            return this.orientation === 'vertical';\n        },\n        isHorizontal() {\n            return this.orientation === 'horizontal';\n        },\n        isBoth() {\n            return this.orientation === 'both';\n        },\n        scrollTo(options) {\n            this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n            this.element && this.element.scrollTo(options);\n        },\n        scrollToIndex(index, behavior = 'auto') {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const first = this.first;\n            const { numToleratedItems } = this.calculateNumItems();\n            const contentPos = this.getContentPosition();\n            const itemSize = this.itemSize;\n            const calculateFirst = (_index = 0, _numT) => (_index <= _numT ? 0 : _index);\n            const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n            const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n            let newFirst = both ? { rows: 0, cols: 0 } : 0;\n            let isRangeChanged = false;\n\n            if (both) {\n                newFirst = { rows: calculateFirst(index[0], numToleratedItems[0]), cols: calculateFirst(index[1], numToleratedItems[1]) };\n                scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n                isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n            } else {\n                newFirst = calculateFirst(index, numToleratedItems);\n                horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), 0) : scrollTo(0, calculateCoord(newFirst, itemSize, contentPos.top));\n                isRangeChanged = newFirst !== first;\n            }\n\n            this.isRangeChanged = isRangeChanged;\n            this.first = newFirst;\n        },\n        scrollInView(index, to, behavior = 'auto') {\n            if (to) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const { first, viewport } = this.getRenderedRange();\n                const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n                const isToStart = to === 'to-start';\n                const isToEnd = to === 'to-end';\n\n                if (isToStart) {\n                    if (both) {\n                        if (viewport.first.rows - first.rows > index[0]) {\n                            scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows - 1) * this.itemSize[0]);\n                        } else if (viewport.first.cols - first.cols > index[1]) {\n                            scrollTo((viewport.first.cols - 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n                        }\n                    } else {\n                        if (viewport.first - first > index) {\n                            const pos = (viewport.first - 1) * this.itemSize;\n\n                            horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                        }\n                    }\n                } else if (isToEnd) {\n                    if (both) {\n                        if (viewport.last.rows - first.rows <= index[0] + 1) {\n                            scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows + 1) * this.itemSize[0]);\n                        } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n                            scrollTo((viewport.first.cols + 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n                        }\n                    } else {\n                        if (viewport.last - first <= index + 1) {\n                            const pos = (viewport.first + 1) * this.itemSize;\n\n                            horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                        }\n                    }\n                }\n            } else {\n                this.scrollToIndex(index, behavior);\n            }\n        },\n        getRenderedRange() {\n            const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n\n            let firstInViewport = this.first;\n            let lastInViewport = 0;\n\n            if (this.element) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const { scrollTop, scrollLeft } = this.element.scrollTop;\n\n                if (both) {\n                    firstInViewport = { rows: calculateFirstInViewport(scrollTop, this.itemSize[0]), cols: calculateFirstInViewport(scrollLeft, this.itemSize[1]) };\n                    lastInViewport = { rows: firstInViewport.rows + this.numItemsInViewport.rows, cols: firstInViewport.cols + this.numItemsInViewport.cols };\n                } else {\n                    const scrollPos = horizontal ? scrollLeft : scrollTop;\n\n                    firstInViewport = calculateFirstInViewport(scrollPos, this.itemSize);\n                    lastInViewport = firstInViewport + this.numItemsInViewport;\n                }\n            }\n\n            return {\n                first: this.first,\n                last: this.last,\n                viewport: {\n                    first: firstInViewport,\n                    last: lastInViewport\n                }\n            };\n        },\n        calculateNumItems() {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const itemSize = this.itemSize;\n            const contentPos = this.getContentPosition();\n            const contentWidth = this.element ? this.element.offsetWidth - contentPos.left : 0;\n            const contentHeight = this.element ? this.element.offsetHeight - contentPos.top : 0;\n            const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n            const calculateNumToleratedItems = (_numItems) => Math.ceil(_numItems / 2);\n            const numItemsInViewport = both\n                ? { rows: calculateNumItemsInViewport(contentHeight, itemSize[0]), cols: calculateNumItemsInViewport(contentWidth, itemSize[1]) }\n                : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, itemSize);\n\n            const numToleratedItems = this.d_numToleratedItems || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n\n            return { numItemsInViewport, numToleratedItems };\n        },\n        calculateOptions() {\n            const both = this.isBoth();\n            const first = this.first;\n            const { numItemsInViewport, numToleratedItems } = this.calculateNumItems();\n            const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n            const last = both\n                ? { rows: calculateLast(first.rows, numItemsInViewport.rows, numToleratedItems[0]), cols: calculateLast(first.cols, numItemsInViewport.cols, numToleratedItems[1], true) }\n                : calculateLast(first, numItemsInViewport, numToleratedItems);\n\n            this.last = last;\n            this.numItemsInViewport = numItemsInViewport;\n            this.d_numToleratedItems = numToleratedItems;\n            this.$emit('update:numToleratedItems', this.d_numToleratedItems);\n\n            if (this.showLoader) {\n                this.loaderArr = both ? Array.from({ length: numItemsInViewport.rows }).map(() => Array.from({ length: numItemsInViewport.cols })) : Array.from({ length: numItemsInViewport });\n            }\n\n            if (this.lazy) {\n                Promise.resolve().then(() => {\n                    this.lazyLoadState = {\n                        first: this.step ? (both ? { rows: 0, cols: first.cols } : 0) : first,\n                        last: Math.min(this.step ? this.step : last, this.items.length)\n                    };\n\n                    this.$emit('lazy-load', this.lazyLoadState);\n                });\n            }\n        },\n        calculateAutoSize() {\n            if (this.autoSize && !this.d_loading) {\n                Promise.resolve().then(() => {\n                    if (this.content) {\n                        const both = this.isBoth();\n                        const horizontal = this.isHorizontal();\n                        const vertical = this.isVertical();\n\n                        this.content.style.minHeight = this.content.style.minWidth = 'auto';\n                        this.content.style.position = 'relative';\n                        this.element.style.contain = 'none';\n\n                        const [contentWidth, contentHeight] = [DomHandler.getWidth(this.content), DomHandler.getHeight(this.content)];\n\n                        contentWidth !== this.defaultContentWidth && (this.element.style.width = '');\n                        contentHeight !== this.defaultContentHeight && (this.element.style.height = '');\n\n                        const [width, height] = [DomHandler.getWidth(this.element), DomHandler.getHeight(this.element)];\n\n                        (both || horizontal) && (this.element.style.width = width < this.defaultWidth ? width + 'px' : this.scrollWidth || this.defaultWidth + 'px');\n                        (both || vertical) && (this.element.style.height = height < this.defaultHeight ? height + 'px' : this.scrollHeight || this.defaultHeight + 'px');\n\n                        this.content.style.minHeight = this.content.style.minWidth = '';\n                        this.content.style.position = '';\n                        this.element.style.contain = '';\n                    }\n                });\n            }\n        },\n        getLast(last = 0, isCols) {\n            return this.items ? Math.min(isCols ? (this.columns || this.items[0]).length : this.items.length, last) : 0;\n        },\n        getContentPosition() {\n            if (this.content) {\n                const style = getComputedStyle(this.content);\n                const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n                const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n                const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n                const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n\n                return { left, right, top, bottom, x: left + right, y: top + bottom };\n            }\n\n            return { left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n        },\n        setSize() {\n            if (this.element) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const parentElement = this.element.parentElement;\n                const width = this.scrollWidth || `${this.element.offsetWidth || parentElement.offsetWidth}px`;\n                const height = this.scrollHeight || `${this.element.offsetHeight || parentElement.offsetHeight}px`;\n                const setProp = (_name, _value) => (this.element.style[_name] = _value);\n\n                if (both || horizontal) {\n                    setProp('height', height);\n                    setProp('width', width);\n                } else {\n                    setProp('height', height);\n                }\n            }\n        },\n        setSpacerSize() {\n            const items = this.items;\n\n            if (items) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const contentPos = this.getContentPosition();\n                const setProp = (_name, _value, _size, _cpos = 0) => (this.spacerStyle = { ...this.spacerStyle, ...{ [`${_name}`]: (_value || []).length * _size + _cpos + 'px' } });\n\n                if (both) {\n                    setProp('height', items, this.itemSize[0], contentPos.y);\n                    setProp('width', this.columns || items[1], this.itemSize[1], contentPos.x);\n                } else {\n                    horizontal ? setProp('width', this.columns || items, this.itemSize, contentPos.x) : setProp('height', items, this.itemSize, contentPos.y);\n                }\n            }\n        },\n        setContentPosition(pos) {\n            if (this.content && !this.appendOnly) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const first = pos ? pos.first : this.first;\n                const calculateTranslateVal = (_first, _size) => _first * _size;\n                const setTransform = (_x = 0, _y = 0) => (this.contentStyle = { ...this.contentStyle, ...{ transform: `translate3d(${_x}px, ${_y}px, 0)` } });\n\n                if (both) {\n                    setTransform(calculateTranslateVal(first.cols, this.itemSize[1]), calculateTranslateVal(first.rows, this.itemSize[0]));\n                } else {\n                    const translateVal = calculateTranslateVal(first, this.itemSize);\n\n                    horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n                }\n            }\n        },\n        onScrollPositionChange(event) {\n            const target = event.target;\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const contentPos = this.getContentPosition();\n            const calculateScrollPos = (_pos, _cpos) => (_pos ? (_pos > _cpos ? _pos - _cpos : _pos) : 0);\n            const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n\n            const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n                return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n            };\n\n            const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n                if (_currentIndex <= _numT) return 0;\n                else return Math.max(0, _isScrollDownOrRight ? (_currentIndex < _triggerIndex ? _first : _currentIndex - _numT) : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n            };\n\n            const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols) => {\n                let lastValue = _first + _num + 2 * _numT;\n\n                if (_currentIndex >= _numT) {\n                    lastValue += _numT + 1;\n                }\n\n                return this.getLast(lastValue, _isCols);\n            };\n\n            const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n            const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n\n            let newFirst = both ? { rows: 0, cols: 0 } : 0;\n            let newLast = this.last;\n            let isRangeChanged = false;\n            let newScrollPos = this.lastScrollPos;\n\n            if (both) {\n                const isScrollDown = this.lastScrollPos.top <= scrollTop;\n                const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n\n                if (!this.appendOnly || (this.appendOnly && (isScrollDown || isScrollRight))) {\n                    const currentIndex = { rows: calculateCurrentIndex(scrollTop, this.itemSize[0]), cols: calculateCurrentIndex(scrollLeft, this.itemSize[1]) };\n                    const triggerIndex = {\n                        rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                        cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                    };\n\n                    newFirst = {\n                        rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                        cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                    };\n                    newLast = {\n                        rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n                        cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n                    };\n\n                    isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n                    newScrollPos = { top: scrollTop, left: scrollLeft };\n                }\n            } else {\n                const scrollPos = horizontal ? scrollLeft : scrollTop;\n                const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n\n                if (!this.appendOnly || (this.appendOnly && isScrollDownOrRight)) {\n                    const currentIndex = calculateCurrentIndex(scrollPos, this.itemSize);\n                    const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n\n                    newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n                    newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n                    isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n                    newScrollPos = scrollPos;\n                }\n            }\n\n            return {\n                first: newFirst,\n                last: newLast,\n                isRangeChanged,\n                scrollPos: newScrollPos\n            };\n        },\n        onScrollChange(event) {\n            const { first, last, isRangeChanged, scrollPos } = this.onScrollPositionChange(event);\n\n            if (isRangeChanged) {\n                const newState = { first, last };\n\n                this.setContentPosition(newState);\n\n                this.first = first;\n                this.last = last;\n                this.lastScrollPos = scrollPos;\n\n                this.$emit('scroll-index-change', newState);\n\n                if (this.lazy && this.isPageChanged(first)) {\n                    const lazyLoadState = {\n                        first: this.step ? Math.min(this.getPageByFirst(first) * this.step, this.items.length - this.step) : first,\n                        last: Math.min(this.step ? (this.getPageByFirst(first) + 1) * this.step : last, this.items.length)\n                    };\n                    const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n\n                    isLazyStateChanged && this.$emit('lazy-load', lazyLoadState);\n                    this.lazyLoadState = lazyLoadState;\n                }\n            }\n        },\n        onScroll(event) {\n            this.$emit('scroll', event);\n\n            if (this.delay && this.isPageChanged()) {\n                if (this.scrollTimeout) {\n                    clearTimeout(this.scrollTimeout);\n                }\n\n                if (!this.d_loading && this.showLoader) {\n                    const { isRangeChanged } = this.onScrollPositionChange(event);\n                    const changed = isRangeChanged || (this.step ? this.isPageChanged() : false);\n\n                    changed && (this.d_loading = true);\n                }\n\n                this.scrollTimeout = setTimeout(() => {\n                    this.onScrollChange(event);\n\n                    if (this.d_loading && this.showLoader && (!this.lazy || this.loading === undefined)) {\n                        this.d_loading = false;\n                        this.page = this.getPageByFirst();\n                    }\n                }, this.delay);\n            } else {\n                this.onScrollChange(event);\n            }\n        },\n        onResize() {\n            if (this.resizeTimeout) {\n                clearTimeout(this.resizeTimeout);\n            }\n\n            this.resizeTimeout = setTimeout(() => {\n                if (DomHandler.isVisible(this.element)) {\n                    const both = this.isBoth();\n                    const vertical = this.isVertical();\n                    const horizontal = this.isHorizontal();\n                    const [width, height] = [DomHandler.getWidth(this.element), DomHandler.getHeight(this.element)];\n                    const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n                    const reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n\n                    if (reinit) {\n                        this.d_numToleratedItems = this.numToleratedItems;\n                        this.defaultWidth = width;\n                        this.defaultHeight = height;\n                        this.defaultContentWidth = DomHandler.getWidth(this.content);\n                        this.defaultContentHeight = DomHandler.getHeight(this.content);\n\n                        this.init();\n                    }\n                }\n            }, this.resizeDelay);\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = this.onResize.bind(this);\n\n                window.addEventListener('resize', this.resizeListener);\n                window.addEventListener('orientationchange', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                window.removeEventListener('orientationchange', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        getOptions(renderedIndex) {\n            const count = (this.items || []).length;\n            const index = this.isBoth() ? this.first.rows + renderedIndex : this.first + renderedIndex;\n\n            return {\n                index,\n                count,\n                first: index === 0,\n                last: index === count - 1,\n                even: index % 2 === 0,\n                odd: index % 2 !== 0\n            };\n        },\n        getLoaderOptions(index, extOptions) {\n            let count = this.loaderArr.length;\n\n            return {\n                index,\n                count,\n                first: index === 0,\n                last: index === count - 1,\n                even: index % 2 === 0,\n                odd: index % 2 !== 0,\n                ...extOptions\n            };\n        },\n        getPageByFirst(first) {\n            return Math.floor(((first ?? this.first) + this.d_numToleratedItems * 4) / (this.step || 1));\n        },\n        isPageChanged(first) {\n            return this.step ? this.page !== this.getPageByFirst(first ?? this.first) : true;\n        },\n        setContentEl(el) {\n            this.content = el || this.content || DomHandler.findSingle(this.element, '.p-virtualscroller-content');\n        },\n        elementRef(el) {\n            this.element = el;\n        },\n        contentRef(el) {\n            this.content = el;\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-virtualscroller',\n                {\n                    'p-virtualscroller-inline': this.inline,\n                    'p-virtualscroller-both p-both-scroll': this.isBoth(),\n                    'p-virtualscroller-horizontal p-horizontal-scroll': this.isHorizontal()\n                },\n                this.class\n            ];\n        },\n        contentClass() {\n            return [\n                'p-virtualscroller-content',\n                {\n                    'p-virtualscroller-loading': this.d_loading\n                }\n            ];\n        },\n        loaderClass() {\n            return [\n                'p-virtualscroller-loader',\n                {\n                    'p-component-overlay': !this.$slots.loader\n                }\n            ];\n        },\n        loadedItems() {\n            if (this.items && !this.d_loading) {\n                if (this.isBoth()) return this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map((item) => (this.columns ? item : item.slice(this.appendOnly ? 0 : this.first.cols, this.last.cols)));\n                else if (this.isHorizontal() && this.columns) return this.items;\n                else return this.items.slice(this.appendOnly ? 0 : this.first, this.last);\n            }\n\n            return [];\n        },\n        loadedRows() {\n            return this.d_loading ? (this.loaderDisabled ? this.loaderArr : []) : this.loadedItems;\n        },\n        loadedColumns() {\n            if (this.columns) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n\n                if (both || horizontal) {\n                    return this.d_loading && this.loaderDisabled ? (both ? this.loaderArr[0] : this.loaderArr) : this.columns.slice(both ? this.first.cols : this.first, both ? this.last.cols : this.last);\n                }\n            }\n\n            return this.columns;\n        }\n    },\n    components: {\n        SpinnerIcon: SpinnerIcon\n    }\n};\n\nconst _hoisted_1 = [\"tabindex\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SpinnerIcon = resolveComponent(\"SpinnerIcon\");\n\n  return (!$props.disabled)\n    ? (openBlock(), createElementBlock(\"div\", mergeProps({\n        key: 0,\n        ref: $options.elementRef,\n        class: $options.containerClass,\n        tabindex: $props.tabindex,\n        style: $props.style,\n        onScroll: _cache[0] || (_cache[0] = (...args) => ($options.onScroll && $options.onScroll(...args)))\n      }, _ctx.ptm('root')), [\n        renderSlot(_ctx.$slots, \"content\", {\n          styleClass: $options.contentClass,\n          items: $options.loadedItems,\n          getItemOptions: $options.getOptions,\n          loading: $data.d_loading,\n          getLoaderOptions: $options.getLoaderOptions,\n          itemSize: $props.itemSize,\n          rows: $options.loadedRows,\n          columns: $options.loadedColumns,\n          contentRef: $options.contentRef,\n          spacerStyle: $data.spacerStyle,\n          contentStyle: $data.contentStyle,\n          vertical: $options.isVertical(),\n          horizontal: $options.isHorizontal(),\n          both: $options.isBoth()\n        }, () => [\n          createElementVNode(\"div\", mergeProps({\n            ref: $options.contentRef,\n            class: $options.contentClass,\n            style: $data.contentStyle\n          }, _ctx.ptm('content')), [\n            (openBlock(true), createElementBlock(Fragment, null, renderList($options.loadedItems, (item, index) => {\n              return renderSlot(_ctx.$slots, \"item\", {\n                key: index,\n                item: item,\n                options: $options.getOptions(index)\n              })\n            }), 128))\n          ], 16)\n        ]),\n        ($props.showSpacer)\n          ? (openBlock(), createElementBlock(\"div\", mergeProps({\n              key: 0,\n              class: \"p-virtualscroller-spacer\",\n              style: $data.spacerStyle\n            }, _ctx.ptm('spacer')), null, 16))\n          : createCommentVNode(\"\", true),\n        (!$props.loaderDisabled && $props.showLoader && $data.d_loading)\n          ? (openBlock(), createElementBlock(\"div\", mergeProps({\n              key: 1,\n              class: $options.loaderClass\n            }, _ctx.ptm('loader')), [\n              (_ctx.$slots && _ctx.$slots.loader)\n                ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList($data.loaderArr, (_, index) => {\n                    return renderSlot(_ctx.$slots, \"loader\", {\n                      key: index,\n                      options: $options.getLoaderOptions(index, $options.isBoth() && { numCols: _ctx.d_numItemsInViewport.cols })\n                    })\n                  }), 128))\n                : createCommentVNode(\"\", true),\n              renderSlot(_ctx.$slots, \"loadingicon\", {}, () => [\n                createVNode(_component_SpinnerIcon, mergeProps({\n                  spin: \"\",\n                  class: \"p-virtualscroller-loading-icon\"\n                }, _ctx.ptm('loadingIcon')), null, 16)\n              ])\n            ], 16))\n          : createCommentVNode(\"\", true)\n      ], 16, _hoisted_1))\n    : (openBlock(), createElementBlock(Fragment, { key: 1 }, [\n        renderSlot(_ctx.$slots, \"default\"),\n        renderSlot(_ctx.$slots, \"content\", {\n          items: $props.items,\n          rows: $props.items,\n          columns: $options.loadedColumns\n        })\n      ], 64))\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-virtualscroller {\\n    position: relative;\\n    overflow: auto;\\n    contain: strict;\\n    transform: translateZ(0);\\n    will-change: scroll-position;\\n    outline: 0 none;\\n}\\n.p-virtualscroller-content {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    /* contain: content; */\\n    min-height: 100%;\\n    min-width: 100%;\\n    will-change: transform;\\n}\\n.p-virtualscroller-spacer {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 1px;\\n    width: 1px;\\n    transform-origin: 0 0;\\n    pointer-events: none;\\n}\\n.p-virtualscroller .p-virtualscroller-loader {\\n    position: sticky;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n.p-virtualscroller-loader.p-component-overlay {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n.p-virtualscroller-loading-icon {\\n    font-size: 2rem;\\n}\\n.p-virtualscroller-loading-icon.p-icon {\\n    width: 2rem;\\n    height: 2rem;\\n}\\n.p-virtualscroller-horizontal > .p-virtualscroller-content {\\n    display: flex;\\n}\\n\\n/* Inline */\\n.p-virtualscroller-inline .p-virtualscroller-content {\\n    position: static;\\n}\\n\";\nstyleInject(css_248z);\n\nscript.render = render;\n\nexport { script as default };\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,wBAAwB;AAClD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,gBAAgB,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,KAAK;AAExK,IAAIC,MAAM,GAAG;EACTC,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAEf,aAAa;EACtBgB,KAAK,EAAE,CAAC,0BAA0B,EAAE,QAAQ,EAAE,qBAAqB,EAAE,WAAW,CAAC;EACjFC,KAAK,EAAE;IACHC,EAAE,EAAE;MACAC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb,CAAC;IACDC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE;MACHL,IAAI,EAAEM,KAAK;MACXJ,OAAO,EAAE;IACb,CAAC;IACDK,QAAQ,EAAE;MACNP,IAAI,EAAE,CAACQ,MAAM,EAAEF,KAAK,CAAC;MACrBJ,OAAO,EAAE;IACb,CAAC;IACDO,YAAY,EAAE,IAAI;IAClBC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE;MACTX,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb,CAAC;IACDU,iBAAiB,EAAE;MACfZ,IAAI,EAAEQ,MAAM;MACZN,OAAO,EAAE;IACb,CAAC;IACDW,KAAK,EAAE;MACHb,IAAI,EAAEQ,MAAM;MACZN,OAAO,EAAE;IACb,CAAC;IACDY,WAAW,EAAE;MACTd,IAAI,EAAEQ,MAAM;MACZN,OAAO,EAAE;IACb,CAAC;IACDa,IAAI,EAAE;MACFf,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDe,QAAQ,EAAE;MACNjB,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDgB,cAAc,EAAE;MACZlB,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDiB,OAAO,EAAE;MACLnB,IAAI,EAAEM,KAAK;MACXJ,OAAO,EAAE;IACb,CAAC;IACDkB,OAAO,EAAE;MACLpB,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDmB,UAAU,EAAE;MACRrB,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDoB,UAAU,EAAE;MACRtB,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDqB,QAAQ,EAAE;MACNvB,IAAI,EAAEQ,MAAM;MACZN,OAAO,EAAE;IACb,CAAC;IACDsB,MAAM,EAAE;MACJxB,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDuB,IAAI,EAAE;MACFzB,IAAI,EAAEQ,MAAM;MACZN,OAAO,EAAE;IACb,CAAC;IACDwB,UAAU,EAAE;MACR1B,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb,CAAC;IACDyB,QAAQ,EAAE;MACN3B,IAAI,EAAEgB,OAAO;MACbd,OAAO,EAAE;IACb;EACJ,CAAC;EACD0B,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI,CAACC,MAAM,EAAE,GAAG;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MAC/CC,IAAI,EAAE,IAAI,CAACH,MAAM,EAAE,GAAG;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MAC9CE,IAAI,EAAE,IAAI,CAACJ,MAAM,EAAE,GAAG;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MAC9CG,kBAAkB,EAAE,IAAI,CAACL,MAAM,EAAE,GAAG;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MAC5DI,aAAa,EAAE,IAAI,CAACN,MAAM,EAAE,GAAG;QAAEO,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MACtDC,mBAAmB,EAAE,IAAI,CAAC3B,iBAAiB;MAC3C4B,SAAS,EAAE,IAAI,CAACpB,OAAO;MACvBqB,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,CAAC,CAAC;MACfC,YAAY,EAAE,CAAC;IACnB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE,IAAI;EACbT,aAAa,EAAE,IAAI;EACnBU,aAAa,EAAE,IAAI;EACnBC,aAAa,EAAE,IAAI;EACnBC,YAAY,EAAE,CAAC;EACfC,aAAa,EAAE,CAAC;EAChBC,mBAAmB,EAAE,CAAC;EACtBC,oBAAoB,EAAE,CAAC;EACvBC,cAAc,EAAE,KAAK;EACrBC,aAAa,EAAE,CAAC,CAAC;EACjBC,cAAc,EAAE,IAAI;EACpBC,WAAW,EAAE,KAAK;EAClBC,KAAK,EAAE;IACH5C,iBAAiBA,CAAC6C,QAAQ,EAAE;MACxB,IAAI,CAAClB,mBAAmB,GAAGkB,QAAQ;IACvC,CAAC;IACDrC,OAAOA,CAACqC,QAAQ,EAAE;MACd,IAAI,CAACjB,SAAS,GAAGiB,QAAQ;IAC7B,CAAC;IACDpD,KAAKA,CAACoD,QAAQ,EAAEC,QAAQ,EAAE;MACtB,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAACF,QAAQ,IAAI,EAAE,EAAEE,MAAM,EAAE;QAC1D,IAAI,CAACC,IAAI,EAAE;QACX,IAAI,CAACC,iBAAiB,EAAE;MAC5B;IACJ,CAAC;IACDtD,QAAQA,CAAA,EAAG;MACP,IAAI,CAACqD,IAAI,EAAE;MACX,IAAI,CAACC,iBAAiB,EAAE;IAC5B,CAAC;IACDlD,WAAWA,CAAA,EAAG;MACV,IAAI,CAACyB,aAAa,GAAG,IAAI,CAACN,MAAM,EAAE,GAAG;QAAEO,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;IAChE,CAAC;IACD7B,YAAYA,CAAA,EAAG;MACX,IAAI,CAACmD,IAAI,EAAE;MACX,IAAI,CAACC,iBAAiB,EAAE;IAC5B,CAAC;IACDnD,WAAWA,CAAA,EAAG;MACV,IAAI,CAACkD,IAAI,EAAE;MACX,IAAI,CAACC,iBAAiB,EAAE;IAC5B;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,EAAE;IAEf,IAAI,CAAC3B,aAAa,GAAG,IAAI,CAACN,MAAM,EAAE,GAAG;MAAEO,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAC,GAAG,CAAC;IAC5D,IAAI,CAACe,aAAa,GAAG,IAAI,CAACA,aAAa,IAAI,CAAC,CAAC;EACjD,CAAC;EACDW,OAAOA,CAAA,EAAG;IACN,CAAC,IAAI,CAACT,WAAW,IAAI,IAAI,CAACQ,QAAQ,EAAE;EACxC,CAAC;EACDE,SAASA,CAAA,EAAG;IACR,IAAI,CAACC,oBAAoB,EAAE;IAE3B,IAAI,CAACX,WAAW,GAAG,KAAK;EAC5B,CAAC;EACDY,OAAO,EAAE;IACLJ,QAAQA,CAAA,EAAG;MACP,IAAIhF,UAAU,CAACqF,SAAS,CAAC,IAAI,CAACxB,OAAO,CAAC,EAAE;QACpC,IAAI,CAACyB,YAAY,CAAC,IAAI,CAACxB,OAAO,CAAC;QAC/B,IAAI,CAACe,IAAI,EAAE;QACX,IAAI,CAACU,kBAAkB,EAAE;QAEzB,IAAI,CAACtB,YAAY,GAAGjE,UAAU,CAACwF,QAAQ,CAAC,IAAI,CAAC3B,OAAO,CAAC;QACrD,IAAI,CAACK,aAAa,GAAGlE,UAAU,CAACyF,SAAS,CAAC,IAAI,CAAC5B,OAAO,CAAC;QACvD,IAAI,CAACM,mBAAmB,GAAGnE,UAAU,CAACwF,QAAQ,CAAC,IAAI,CAAC1B,OAAO,CAAC;QAC5D,IAAI,CAACM,oBAAoB,GAAGpE,UAAU,CAACyF,SAAS,CAAC,IAAI,CAAC3B,OAAO,CAAC;QAC9D,IAAI,CAACU,WAAW,GAAG,IAAI;MAC3B;IACJ,CAAC;IACDK,IAAIA,CAAA,EAAG;MACH,IAAI,CAAC,IAAI,CAAC3C,QAAQ,EAAE;QAChB,IAAI,CAACwD,OAAO,EAAE;QACd,IAAI,CAACC,gBAAgB,EAAE;QACvB,IAAI,CAACC,aAAa,EAAE;MACxB;IACJ,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,OAAO,IAAI,CAACjE,WAAW,KAAK,UAAU;IAC1C,CAAC;IACDkE,YAAYA,CAAA,EAAG;MACX,OAAO,IAAI,CAAClE,WAAW,KAAK,YAAY;IAC5C,CAAC;IACDmB,MAAMA,CAAA,EAAG;MACL,OAAO,IAAI,CAACnB,WAAW,KAAK,MAAM;IACtC,CAAC;IACDmE,QAAQA,CAACC,OAAO,EAAE;MACd,IAAI,CAAC3C,aAAa,GAAG,IAAI,CAAC4C,IAAI,GAAG;QAAE3C,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MACxD,IAAI,CAACM,OAAO,IAAI,IAAI,CAACA,OAAO,CAACkC,QAAQ,CAACC,OAAO,CAAC;IAClD,CAAC;IACDE,aAAaA,CAACC,KAAK,EAAEC,QAAQ,GAAG,MAAM,EAAE;MACpC,MAAMH,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;MAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;MACtC,MAAMhD,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM;QAAEjB;MAAkB,CAAC,GAAG,IAAI,CAACyE,iBAAiB,EAAE;MACtD,MAAMC,UAAU,GAAG,IAAI,CAACC,kBAAkB,EAAE;MAC5C,MAAMhF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMiF,cAAc,GAAGA,CAACC,MAAM,GAAG,CAAC,EAAEC,KAAK,KAAMD,MAAM,IAAIC,KAAK,GAAG,CAAC,GAAGD,MAAO;MAC5E,MAAME,cAAc,GAAGA,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,KAAKF,MAAM,GAAGC,KAAK,GAAGC,KAAK;MACvE,MAAMhB,QAAQ,GAAGA,CAACxC,IAAI,GAAG,CAAC,EAAED,GAAG,GAAG,CAAC,KAAK,IAAI,CAACyC,QAAQ,CAAC;QAAExC,IAAI;QAAED,GAAG;QAAE8C;MAAS,CAAC,CAAC;MAC9E,IAAIY,QAAQ,GAAGf,IAAI,GAAG;QAAEjD,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MAC9C,IAAIoB,cAAc,GAAG,KAAK;MAE1B,IAAI4B,IAAI,EAAE;QACNe,QAAQ,GAAG;UAAEhE,IAAI,EAAEyD,cAAc,CAACN,KAAK,CAAC,CAAC,CAAC,EAAEtE,iBAAiB,CAAC,CAAC,CAAC,CAAC;UAAEoB,IAAI,EAAEwD,cAAc,CAACN,KAAK,CAAC,CAAC,CAAC,EAAEtE,iBAAiB,CAAC,CAAC,CAAC;QAAE,CAAC;QACzHkE,QAAQ,CAACa,cAAc,CAACI,QAAQ,CAAC/D,IAAI,EAAEzB,QAAQ,CAAC,CAAC,CAAC,EAAE+E,UAAU,CAAChD,IAAI,CAAC,EAAEqD,cAAc,CAACI,QAAQ,CAAChE,IAAI,EAAExB,QAAQ,CAAC,CAAC,CAAC,EAAE+E,UAAU,CAACjD,GAAG,CAAC,CAAC;QACjIe,cAAc,GAAG2C,QAAQ,CAAChE,IAAI,KAAKF,KAAK,CAACE,IAAI,IAAIgE,QAAQ,CAAC/D,IAAI,KAAKH,KAAK,CAACG,IAAI;MACjF,CAAC,MAAM;QACH+D,QAAQ,GAAGP,cAAc,CAACN,KAAK,EAAEtE,iBAAiB,CAAC;QACnDwE,UAAU,GAAGN,QAAQ,CAACa,cAAc,CAACI,QAAQ,EAAExF,QAAQ,EAAE+E,UAAU,CAAChD,IAAI,CAAC,EAAE,CAAC,CAAC,GAAGwC,QAAQ,CAAC,CAAC,EAAEa,cAAc,CAACI,QAAQ,EAAExF,QAAQ,EAAE+E,UAAU,CAACjD,GAAG,CAAC,CAAC;QAC/Ie,cAAc,GAAG2C,QAAQ,KAAKlE,KAAK;MACvC;MAEA,IAAI,CAACuB,cAAc,GAAGA,cAAc;MACpC,IAAI,CAACvB,KAAK,GAAGkE,QAAQ;IACzB,CAAC;IACDC,YAAYA,CAACd,KAAK,EAAEe,EAAE,EAAEd,QAAQ,GAAG,MAAM,EAAE;MACvC,IAAIc,EAAE,EAAE;QACJ,MAAMjB,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;QAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;QACtC,MAAM;UAAEhD,KAAK;UAAEqE;QAAS,CAAC,GAAG,IAAI,CAACC,gBAAgB,EAAE;QACnD,MAAMrB,QAAQ,GAAGA,CAACxC,IAAI,GAAG,CAAC,EAAED,GAAG,GAAG,CAAC,KAAK,IAAI,CAACyC,QAAQ,CAAC;UAAExC,IAAI;UAAED,GAAG;UAAE8C;QAAS,CAAC,CAAC;QAC9E,MAAMiB,SAAS,GAAGH,EAAE,KAAK,UAAU;QACnC,MAAMI,OAAO,GAAGJ,EAAE,KAAK,QAAQ;QAE/B,IAAIG,SAAS,EAAE;UACX,IAAIpB,IAAI,EAAE;YACN,IAAIkB,QAAQ,CAACrE,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACE,IAAI,GAAGmD,KAAK,CAAC,CAAC,CAAC,EAAE;cAC7CJ,QAAQ,CAACoB,QAAQ,CAACrE,KAAK,CAACG,IAAI,GAAG,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC2F,QAAQ,CAACrE,KAAK,CAACE,IAAI,GAAG,CAAC,IAAI,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClG,CAAC,MAAM,IAAI2F,QAAQ,CAACrE,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACG,IAAI,GAAGkD,KAAK,CAAC,CAAC,CAAC,EAAE;cACpDJ,QAAQ,CAAC,CAACoB,QAAQ,CAACrE,KAAK,CAACG,IAAI,GAAG,CAAC,IAAI,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAC,EAAE2F,QAAQ,CAACrE,KAAK,CAACE,IAAI,GAAG,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClG;UACJ,CAAC,MAAM;YACH,IAAI2F,QAAQ,CAACrE,KAAK,GAAGA,KAAK,GAAGqD,KAAK,EAAE;cAChC,MAAMoB,GAAG,GAAG,CAACJ,QAAQ,CAACrE,KAAK,GAAG,CAAC,IAAI,IAAI,CAACtB,QAAQ;cAEhD6E,UAAU,GAAGN,QAAQ,CAACwB,GAAG,EAAE,CAAC,CAAC,GAAGxB,QAAQ,CAAC,CAAC,EAAEwB,GAAG,CAAC;YACpD;UACJ;QACJ,CAAC,MAAM,IAAID,OAAO,EAAE;UAChB,IAAIrB,IAAI,EAAE;YACN,IAAIkB,QAAQ,CAACjE,IAAI,CAACF,IAAI,GAAGF,KAAK,CAACE,IAAI,IAAImD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;cACjDJ,QAAQ,CAACoB,QAAQ,CAACrE,KAAK,CAACG,IAAI,GAAG,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC2F,QAAQ,CAACrE,KAAK,CAACE,IAAI,GAAG,CAAC,IAAI,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClG,CAAC,MAAM,IAAI2F,QAAQ,CAACjE,IAAI,CAACD,IAAI,GAAGH,KAAK,CAACG,IAAI,IAAIkD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;cACxDJ,QAAQ,CAAC,CAACoB,QAAQ,CAACrE,KAAK,CAACG,IAAI,GAAG,CAAC,IAAI,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAC,EAAE2F,QAAQ,CAACrE,KAAK,CAACE,IAAI,GAAG,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClG;UACJ,CAAC,MAAM;YACH,IAAI2F,QAAQ,CAACjE,IAAI,GAAGJ,KAAK,IAAIqD,KAAK,GAAG,CAAC,EAAE;cACpC,MAAMoB,GAAG,GAAG,CAACJ,QAAQ,CAACrE,KAAK,GAAG,CAAC,IAAI,IAAI,CAACtB,QAAQ;cAEhD6E,UAAU,GAAGN,QAAQ,CAACwB,GAAG,EAAE,CAAC,CAAC,GAAGxB,QAAQ,CAAC,CAAC,EAAEwB,GAAG,CAAC;YACpD;UACJ;QACJ;MACJ,CAAC,MAAM;QACH,IAAI,CAACrB,aAAa,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACvC;IACJ,CAAC;IACDgB,gBAAgBA,CAAA,EAAG;MACf,MAAMI,wBAAwB,GAAGA,CAACC,IAAI,EAAEX,KAAK,KAAKY,IAAI,CAACC,KAAK,CAACF,IAAI,IAAIX,KAAK,IAAIW,IAAI,CAAC,CAAC;MAEpF,IAAIG,eAAe,GAAG,IAAI,CAAC9E,KAAK;MAChC,IAAI+E,cAAc,GAAG,CAAC;MAEtB,IAAI,IAAI,CAAChE,OAAO,EAAE;QACd,MAAMoC,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;QAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;QACtC,MAAM;UAAEgC,SAAS;UAAEC;QAAW,CAAC,GAAG,IAAI,CAAClE,OAAO,CAACiE,SAAS;QAExD,IAAI7B,IAAI,EAAE;UACN2B,eAAe,GAAG;YAAE5E,IAAI,EAAEwE,wBAAwB,CAACM,SAAS,EAAE,IAAI,CAACtG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAEyB,IAAI,EAAEuE,wBAAwB,CAACO,UAAU,EAAE,IAAI,CAACvG,QAAQ,CAAC,CAAC,CAAC;UAAE,CAAC;UAC/IqG,cAAc,GAAG;YAAE7E,IAAI,EAAE4E,eAAe,CAAC5E,IAAI,GAAG,IAAI,CAACI,kBAAkB,CAACJ,IAAI;YAAEC,IAAI,EAAE2E,eAAe,CAAC3E,IAAI,GAAG,IAAI,CAACG,kBAAkB,CAACH;UAAK,CAAC;QAC7I,CAAC,MAAM;UACH,MAAM+E,SAAS,GAAG3B,UAAU,GAAG0B,UAAU,GAAGD,SAAS;UAErDF,eAAe,GAAGJ,wBAAwB,CAACQ,SAAS,EAAE,IAAI,CAACxG,QAAQ,CAAC;UACpEqG,cAAc,GAAGD,eAAe,GAAG,IAAI,CAACxE,kBAAkB;QAC9D;MACJ;MAEA,OAAO;QACHN,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBI,IAAI,EAAE,IAAI,CAACA,IAAI;QACfiE,QAAQ,EAAE;UACNrE,KAAK,EAAE8E,eAAe;UACtB1E,IAAI,EAAE2E;QACV;MACJ,CAAC;IACL,CAAC;IACDvB,iBAAiBA,CAAA,EAAG;MAChB,MAAML,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;MAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;MACtC,MAAMtE,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAM+E,UAAU,GAAG,IAAI,CAACC,kBAAkB,EAAE;MAC5C,MAAMyB,YAAY,GAAG,IAAI,CAACpE,OAAO,GAAG,IAAI,CAACA,OAAO,CAACqE,WAAW,GAAG3B,UAAU,CAAChD,IAAI,GAAG,CAAC;MAClF,MAAM4E,aAAa,GAAG,IAAI,CAACtE,OAAO,GAAG,IAAI,CAACA,OAAO,CAACuE,YAAY,GAAG7B,UAAU,CAACjD,GAAG,GAAG,CAAC;MACnF,MAAM+E,2BAA2B,GAAGA,CAACC,YAAY,EAAEC,SAAS,KAAKb,IAAI,CAACc,IAAI,CAACF,YAAY,IAAIC,SAAS,IAAID,YAAY,CAAC,CAAC;MACtH,MAAMG,0BAA0B,GAAIC,SAAS,IAAKhB,IAAI,CAACc,IAAI,CAACE,SAAS,GAAG,CAAC,CAAC;MAC1E,MAAMtF,kBAAkB,GAAG6C,IAAI,GACzB;QAAEjD,IAAI,EAAEqF,2BAA2B,CAACF,aAAa,EAAE3G,QAAQ,CAAC,CAAC,CAAC,CAAC;QAAEyB,IAAI,EAAEoF,2BAA2B,CAACJ,YAAY,EAAEzG,QAAQ,CAAC,CAAC,CAAC;MAAE,CAAC,GAC/H6G,2BAA2B,CAAChC,UAAU,GAAG4B,YAAY,GAAGE,aAAa,EAAE3G,QAAQ,CAAC;MAEtF,MAAMK,iBAAiB,GAAG,IAAI,CAAC2B,mBAAmB,KAAKyC,IAAI,GAAG,CAACwC,0BAA0B,CAACrF,kBAAkB,CAACJ,IAAI,CAAC,EAAEyF,0BAA0B,CAACrF,kBAAkB,CAACH,IAAI,CAAC,CAAC,GAAGwF,0BAA0B,CAACrF,kBAAkB,CAAC,CAAC;MAE1N,OAAO;QAAEA,kBAAkB;QAAEvB;MAAkB,CAAC;IACpD,CAAC;IACD8D,gBAAgBA,CAAA,EAAG;MACf,MAAMM,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;MAC1B,MAAMD,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM;QAAEM,kBAAkB;QAAEvB;MAAkB,CAAC,GAAG,IAAI,CAACyE,iBAAiB,EAAE;MAC1E,MAAMqC,aAAa,GAAGA,CAAC9B,MAAM,EAAE+B,IAAI,EAAEjC,KAAK,EAAEkC,OAAO,GAAG,KAAK,KAAK,IAAI,CAACC,OAAO,CAACjC,MAAM,GAAG+B,IAAI,GAAG,CAAC/B,MAAM,GAAGF,KAAK,GAAG,CAAC,GAAG,CAAC,IAAIA,KAAK,EAAEkC,OAAO,CAAC;MACvI,MAAM3F,IAAI,GAAG+C,IAAI,GACX;QAAEjD,IAAI,EAAE2F,aAAa,CAAC7F,KAAK,CAACE,IAAI,EAAEI,kBAAkB,CAACJ,IAAI,EAAEnB,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAAEoB,IAAI,EAAE0F,aAAa,CAAC7F,KAAK,CAACG,IAAI,EAAEG,kBAAkB,CAACH,IAAI,EAAEpB,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI;MAAE,CAAC,GACxK8G,aAAa,CAAC7F,KAAK,EAAEM,kBAAkB,EAAEvB,iBAAiB,CAAC;MAEjE,IAAI,CAACqB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACE,kBAAkB,GAAGA,kBAAkB;MAC5C,IAAI,CAACI,mBAAmB,GAAG3B,iBAAiB;MAC5C,IAAI,CAACkH,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAACvF,mBAAmB,CAAC;MAEhE,IAAI,IAAI,CAACjB,UAAU,EAAE;QACjB,IAAI,CAACmB,SAAS,GAAGuC,IAAI,GAAG1E,KAAK,CAACyH,IAAI,CAAC;UAAEpE,MAAM,EAAExB,kBAAkB,CAACJ;QAAK,CAAC,CAAC,CAACiG,GAAG,CAAC,MAAM1H,KAAK,CAACyH,IAAI,CAAC;UAAEpE,MAAM,EAAExB,kBAAkB,CAACH;QAAK,CAAC,CAAC,CAAC,GAAG1B,KAAK,CAACyH,IAAI,CAAC;UAAEpE,MAAM,EAAExB;QAAmB,CAAC,CAAC;MACnL;MAEA,IAAI,IAAI,CAACpB,IAAI,EAAE;QACXkH,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,MAAM;UACzB,IAAI,CAAC9E,aAAa,GAAG;YACjBxB,KAAK,EAAE,IAAI,CAACJ,IAAI,GAAIuD,IAAI,GAAG;cAAEjD,IAAI,EAAE,CAAC;cAAEC,IAAI,EAAEH,KAAK,CAACG;YAAK,CAAC,GAAG,CAAC,GAAIH,KAAK;YACrEI,IAAI,EAAEwE,IAAI,CAAC2B,GAAG,CAAC,IAAI,CAAC3G,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGQ,IAAI,EAAE,IAAI,CAAC5B,KAAK,CAACsD,MAAM;UAClE,CAAC;UAED,IAAI,CAACmE,KAAK,CAAC,WAAW,EAAE,IAAI,CAACzE,aAAa,CAAC;QAC/C,CAAC,CAAC;MACN;IACJ,CAAC;IACDQ,iBAAiBA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAClC,QAAQ,IAAI,CAAC,IAAI,CAACa,SAAS,EAAE;QAClCyF,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,MAAM;UACzB,IAAI,IAAI,CAACtF,OAAO,EAAE;YACd,MAAMmC,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;YAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;YACtC,MAAMwD,QAAQ,GAAG,IAAI,CAACzD,UAAU,EAAE;YAElC,IAAI,CAAC/B,OAAO,CAAC1C,KAAK,CAACmI,SAAS,GAAG,IAAI,CAACzF,OAAO,CAAC1C,KAAK,CAACoI,QAAQ,GAAG,MAAM;YACnE,IAAI,CAAC1F,OAAO,CAAC1C,KAAK,CAACqI,QAAQ,GAAG,UAAU;YACxC,IAAI,CAAC5F,OAAO,CAACzC,KAAK,CAACsI,OAAO,GAAG,MAAM;YAEnC,MAAM,CAACzB,YAAY,EAAEE,aAAa,CAAC,GAAG,CAACnI,UAAU,CAACwF,QAAQ,CAAC,IAAI,CAAC1B,OAAO,CAAC,EAAE9D,UAAU,CAACyF,SAAS,CAAC,IAAI,CAAC3B,OAAO,CAAC,CAAC;YAE7GmE,YAAY,KAAK,IAAI,CAAC9D,mBAAmB,KAAK,IAAI,CAACN,OAAO,CAACzC,KAAK,CAACuI,KAAK,GAAG,EAAE,CAAC;YAC5ExB,aAAa,KAAK,IAAI,CAAC/D,oBAAoB,KAAK,IAAI,CAACP,OAAO,CAACzC,KAAK,CAACwI,MAAM,GAAG,EAAE,CAAC;YAE/E,MAAM,CAACD,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC5J,UAAU,CAACwF,QAAQ,CAAC,IAAI,CAAC3B,OAAO,CAAC,EAAE7D,UAAU,CAACyF,SAAS,CAAC,IAAI,CAAC5B,OAAO,CAAC,CAAC;YAE/F,CAACoC,IAAI,IAAII,UAAU,MAAM,IAAI,CAACxC,OAAO,CAACzC,KAAK,CAACuI,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC1F,YAAY,GAAG0F,KAAK,GAAG,IAAI,GAAG,IAAI,CAAChI,WAAW,IAAI,IAAI,CAACsC,YAAY,GAAG,IAAI,CAAC;YAC5I,CAACgC,IAAI,IAAIqD,QAAQ,MAAM,IAAI,CAACzF,OAAO,CAACzC,KAAK,CAACwI,MAAM,GAAGA,MAAM,GAAG,IAAI,CAAC1F,aAAa,GAAG0F,MAAM,GAAG,IAAI,GAAG,IAAI,CAAClI,YAAY,IAAI,IAAI,CAACwC,aAAa,GAAG,IAAI,CAAC;YAEhJ,IAAI,CAACJ,OAAO,CAAC1C,KAAK,CAACmI,SAAS,GAAG,IAAI,CAACzF,OAAO,CAAC1C,KAAK,CAACoI,QAAQ,GAAG,EAAE;YAC/D,IAAI,CAAC1F,OAAO,CAAC1C,KAAK,CAACqI,QAAQ,GAAG,EAAE;YAChC,IAAI,CAAC5F,OAAO,CAACzC,KAAK,CAACsI,OAAO,GAAG,EAAE;UACnC;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IACDZ,OAAOA,CAAC5F,IAAI,GAAG,CAAC,EAAE2G,MAAM,EAAE;MACtB,OAAO,IAAI,CAACvI,KAAK,GAAGoG,IAAI,CAAC2B,GAAG,CAACQ,MAAM,GAAG,CAAC,IAAI,CAACzH,OAAO,IAAI,IAAI,CAACd,KAAK,CAAC,CAAC,CAAC,EAAEsD,MAAM,GAAG,IAAI,CAACtD,KAAK,CAACsD,MAAM,EAAE1B,IAAI,CAAC,GAAG,CAAC;IAC/G,CAAC;IACDsD,kBAAkBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAAC1C,OAAO,EAAE;QACd,MAAM1C,KAAK,GAAG0I,gBAAgB,CAAC,IAAI,CAAChG,OAAO,CAAC;QAC5C,MAAMP,IAAI,GAAGwG,UAAU,CAAC3I,KAAK,CAAC4I,WAAW,CAAC,GAAGtC,IAAI,CAACuC,GAAG,CAACF,UAAU,CAAC3I,KAAK,CAACmC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrF,MAAM2G,KAAK,GAAGH,UAAU,CAAC3I,KAAK,CAAC+I,YAAY,CAAC,GAAGzC,IAAI,CAACuC,GAAG,CAACF,UAAU,CAAC3I,KAAK,CAAC8I,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxF,MAAM5G,GAAG,GAAGyG,UAAU,CAAC3I,KAAK,CAACgJ,UAAU,CAAC,GAAG1C,IAAI,CAACuC,GAAG,CAACF,UAAU,CAAC3I,KAAK,CAACkC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClF,MAAM+G,MAAM,GAAGN,UAAU,CAAC3I,KAAK,CAACkJ,aAAa,CAAC,GAAG5C,IAAI,CAACuC,GAAG,CAACF,UAAU,CAAC3I,KAAK,CAACiJ,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAE3F,OAAO;UAAE9G,IAAI;UAAE2G,KAAK;UAAE5G,GAAG;UAAE+G,MAAM;UAAEE,CAAC,EAAEhH,IAAI,GAAG2G,KAAK;UAAEM,CAAC,EAAElH,GAAG,GAAG+G;QAAO,CAAC;MACzE;MAEA,OAAO;QAAE9G,IAAI,EAAE,CAAC;QAAE2G,KAAK,EAAE,CAAC;QAAE5G,GAAG,EAAE,CAAC;QAAE+G,MAAM,EAAE,CAAC;QAAEE,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;IAC/D,CAAC;IACD9E,OAAOA,CAAA,EAAG;MACN,IAAI,IAAI,CAAC7B,OAAO,EAAE;QACd,MAAMoC,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;QAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;QACtC,MAAM2E,aAAa,GAAG,IAAI,CAAC5G,OAAO,CAAC4G,aAAa;QAChD,MAAMd,KAAK,GAAG,IAAI,CAAChI,WAAW,IAAK,GAAE,IAAI,CAACkC,OAAO,CAACqE,WAAW,IAAIuC,aAAa,CAACvC,WAAY,IAAG;QAC9F,MAAM0B,MAAM,GAAG,IAAI,CAAClI,YAAY,IAAK,GAAE,IAAI,CAACmC,OAAO,CAACuE,YAAY,IAAIqC,aAAa,CAACrC,YAAa,IAAG;QAClG,MAAMsC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAM,IAAI,CAAC/G,OAAO,CAACzC,KAAK,CAACuJ,KAAK,CAAC,GAAGC,MAAO;QAEvE,IAAI3E,IAAI,IAAII,UAAU,EAAE;UACpBqE,OAAO,CAAC,QAAQ,EAAEd,MAAM,CAAC;UACzBc,OAAO,CAAC,OAAO,EAAEf,KAAK,CAAC;QAC3B,CAAC,MAAM;UACHe,OAAO,CAAC,QAAQ,EAAEd,MAAM,CAAC;QAC7B;MACJ;IACJ,CAAC;IACDhE,aAAaA,CAAA,EAAG;MACZ,MAAMtE,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAIA,KAAK,EAAE;QACP,MAAM2E,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;QAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;QACtC,MAAMS,UAAU,GAAG,IAAI,CAACC,kBAAkB,EAAE;QAC5C,MAAMkE,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAE9D,KAAK,EAAEC,KAAK,GAAG,CAAC,KAAM,IAAI,CAACpD,WAAW,GAAG;UAAE,GAAG,IAAI,CAACA,WAAW;UAAE,GAAG;YAAE,CAAE,GAAEgH,KAAM,EAAC,GAAG,CAACC,MAAM,IAAI,EAAE,EAAEhG,MAAM,GAAGkC,KAAK,GAAGC,KAAK,GAAG;UAAK;QAAE,CAAE;QAEpK,IAAId,IAAI,EAAE;UACNyE,OAAO,CAAC,QAAQ,EAAEpJ,KAAK,EAAE,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,EAAE+E,UAAU,CAACiE,CAAC,CAAC;UACxDE,OAAO,CAAC,OAAO,EAAE,IAAI,CAACtI,OAAO,IAAId,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,EAAE+E,UAAU,CAACgE,CAAC,CAAC;QAC9E,CAAC,MAAM;UACHlE,UAAU,GAAGqE,OAAO,CAAC,OAAO,EAAE,IAAI,CAACtI,OAAO,IAAId,KAAK,EAAE,IAAI,CAACE,QAAQ,EAAE+E,UAAU,CAACgE,CAAC,CAAC,GAAGG,OAAO,CAAC,QAAQ,EAAEpJ,KAAK,EAAE,IAAI,CAACE,QAAQ,EAAE+E,UAAU,CAACiE,CAAC,CAAC;QAC7I;MACJ;IACJ,CAAC;IACDK,kBAAkBA,CAACtD,GAAG,EAAE;MACpB,IAAI,IAAI,CAACzD,OAAO,IAAI,CAAC,IAAI,CAACnB,UAAU,EAAE;QAClC,MAAMsD,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;QAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;QACtC,MAAMhD,KAAK,GAAGyE,GAAG,GAAGA,GAAG,CAACzE,KAAK,GAAG,IAAI,CAACA,KAAK;QAC1C,MAAMgI,qBAAqB,GAAGA,CAACjE,MAAM,EAAEC,KAAK,KAAKD,MAAM,GAAGC,KAAK;QAC/D,MAAMiE,YAAY,GAAGA,CAACC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,KAAM,IAAI,CAACrH,YAAY,GAAG;UAAE,GAAG,IAAI,CAACA,YAAY;UAAE,GAAG;YAAEsH,SAAS,EAAG,eAAcF,EAAG,OAAMC,EAAG;UAAQ;QAAE,CAAE;QAE7I,IAAIhF,IAAI,EAAE;UACN8E,YAAY,CAACD,qBAAqB,CAAChI,KAAK,CAACG,IAAI,EAAE,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEsJ,qBAAqB,CAAChI,KAAK,CAACE,IAAI,EAAE,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1H,CAAC,MAAM;UACH,MAAM2J,YAAY,GAAGL,qBAAqB,CAAChI,KAAK,EAAE,IAAI,CAACtB,QAAQ,CAAC;UAEhE6E,UAAU,GAAG0E,YAAY,CAACI,YAAY,EAAE,CAAC,CAAC,GAAGJ,YAAY,CAAC,CAAC,EAAEI,YAAY,CAAC;QAC9E;MACJ;IACJ,CAAC;IACDC,sBAAsBA,CAACC,KAAK,EAAE;MAC1B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;MAC3B,MAAMrF,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;MAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;MACtC,MAAMS,UAAU,GAAG,IAAI,CAACC,kBAAkB,EAAE;MAC5C,MAAM+E,kBAAkB,GAAGA,CAAC9D,IAAI,EAAEV,KAAK,KAAMU,IAAI,GAAIA,IAAI,GAAGV,KAAK,GAAGU,IAAI,GAAGV,KAAK,GAAGU,IAAI,GAAI,CAAE;MAC7F,MAAM+D,qBAAqB,GAAGA,CAAC/D,IAAI,EAAEX,KAAK,KAAKY,IAAI,CAACC,KAAK,CAACF,IAAI,IAAIX,KAAK,IAAIW,IAAI,CAAC,CAAC;MAEjF,MAAMgE,qBAAqB,GAAGA,CAACC,aAAa,EAAE7E,MAAM,EAAE8E,KAAK,EAAE/C,IAAI,EAAEjC,KAAK,EAAEiF,oBAAoB,KAAK;QAC/F,OAAOF,aAAa,IAAI/E,KAAK,GAAGA,KAAK,GAAGiF,oBAAoB,GAAGD,KAAK,GAAG/C,IAAI,GAAGjC,KAAK,GAAGE,MAAM,GAAGF,KAAK,GAAG,CAAC;MAC5G,CAAC;MAED,MAAMF,cAAc,GAAGA,CAACiF,aAAa,EAAEG,aAAa,EAAEhF,MAAM,EAAE8E,KAAK,EAAE/C,IAAI,EAAEjC,KAAK,EAAEiF,oBAAoB,KAAK;QACvG,IAAIF,aAAa,IAAI/E,KAAK,EAAE,OAAO,CAAC,CAAC,KAChC,OAAOe,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE2B,oBAAoB,GAAIF,aAAa,GAAGG,aAAa,GAAGhF,MAAM,GAAG6E,aAAa,GAAG/E,KAAK,GAAI+E,aAAa,GAAGG,aAAa,GAAGhF,MAAM,GAAG6E,aAAa,GAAG,CAAC,GAAG/E,KAAK,CAAC;MACzL,CAAC;MAED,MAAMgC,aAAa,GAAGA,CAAC+C,aAAa,EAAE7E,MAAM,EAAE8E,KAAK,EAAE/C,IAAI,EAAEjC,KAAK,EAAEkC,OAAO,KAAK;QAC1E,IAAIiD,SAAS,GAAGjF,MAAM,GAAG+B,IAAI,GAAG,CAAC,GAAGjC,KAAK;QAEzC,IAAI+E,aAAa,IAAI/E,KAAK,EAAE;UACxBmF,SAAS,IAAInF,KAAK,GAAG,CAAC;QAC1B;QAEA,OAAO,IAAI,CAACmC,OAAO,CAACgD,SAAS,EAAEjD,OAAO,CAAC;MAC3C,CAAC;MAED,MAAMf,SAAS,GAAGyD,kBAAkB,CAACD,MAAM,CAACxD,SAAS,EAAEvB,UAAU,CAACjD,GAAG,CAAC;MACtE,MAAMyE,UAAU,GAAGwD,kBAAkB,CAACD,MAAM,CAACvD,UAAU,EAAExB,UAAU,CAAChD,IAAI,CAAC;MAEzE,IAAIyD,QAAQ,GAAGf,IAAI,GAAG;QAAEjD,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,GAAG,CAAC;MAC9C,IAAI8I,OAAO,GAAG,IAAI,CAAC7I,IAAI;MACvB,IAAImB,cAAc,GAAG,KAAK;MAC1B,IAAI2H,YAAY,GAAG,IAAI,CAAC3I,aAAa;MAErC,IAAI4C,IAAI,EAAE;QACN,MAAMgG,YAAY,GAAG,IAAI,CAAC5I,aAAa,CAACC,GAAG,IAAIwE,SAAS;QACxD,MAAMoE,aAAa,GAAG,IAAI,CAAC7I,aAAa,CAACE,IAAI,IAAIwE,UAAU;QAE3D,IAAI,CAAC,IAAI,CAACpF,UAAU,IAAK,IAAI,CAACA,UAAU,KAAKsJ,YAAY,IAAIC,aAAa,CAAE,EAAE;UAC1E,MAAMC,YAAY,GAAG;YAAEnJ,IAAI,EAAEwI,qBAAqB,CAAC1D,SAAS,EAAE,IAAI,CAACtG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAEyB,IAAI,EAAEuI,qBAAqB,CAACzD,UAAU,EAAE,IAAI,CAACvG,QAAQ,CAAC,CAAC,CAAC;UAAE,CAAC;UAC5I,MAAM4K,YAAY,GAAG;YACjBpJ,IAAI,EAAEyI,qBAAqB,CAACU,YAAY,CAACnJ,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACI,kBAAkB,CAACJ,IAAI,EAAE,IAAI,CAACQ,mBAAmB,CAAC,CAAC,CAAC,EAAEyI,YAAY,CAAC;YACxJhJ,IAAI,EAAEwI,qBAAqB,CAACU,YAAY,CAAClJ,IAAI,EAAE,IAAI,CAACH,KAAK,CAACG,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACG,kBAAkB,CAACH,IAAI,EAAE,IAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,EAAE0I,aAAa;UAC5J,CAAC;UAEDlF,QAAQ,GAAG;YACPhE,IAAI,EAAEyD,cAAc,CAAC0F,YAAY,CAACnJ,IAAI,EAAEoJ,YAAY,CAACpJ,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACI,kBAAkB,CAACJ,IAAI,EAAE,IAAI,CAACQ,mBAAmB,CAAC,CAAC,CAAC,EAAEyI,YAAY,CAAC;YACpKhJ,IAAI,EAAEwD,cAAc,CAAC0F,YAAY,CAAClJ,IAAI,EAAEmJ,YAAY,CAACnJ,IAAI,EAAE,IAAI,CAACH,KAAK,CAACG,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACG,kBAAkB,CAACH,IAAI,EAAE,IAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,EAAE0I,aAAa;UACxK,CAAC;UACDH,OAAO,GAAG;YACN/I,IAAI,EAAE2F,aAAa,CAACwD,YAAY,CAACnJ,IAAI,EAAEgE,QAAQ,CAAChE,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACI,kBAAkB,CAACJ,IAAI,EAAE,IAAI,CAACQ,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAChIP,IAAI,EAAE0F,aAAa,CAACwD,YAAY,CAAClJ,IAAI,EAAE+D,QAAQ,CAAC/D,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACG,kBAAkB,CAACH,IAAI,EAAE,IAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI;UACzI,CAAC;UAEDa,cAAc,GAAG2C,QAAQ,CAAChE,IAAI,KAAK,IAAI,CAACF,KAAK,CAACE,IAAI,IAAI+I,OAAO,CAAC/I,IAAI,KAAK,IAAI,CAACE,IAAI,CAACF,IAAI,IAAIgE,QAAQ,CAAC/D,IAAI,KAAK,IAAI,CAACH,KAAK,CAACG,IAAI,IAAI8I,OAAO,CAAC9I,IAAI,KAAK,IAAI,CAACC,IAAI,CAACD,IAAI,IAAI,IAAI,CAACoB,cAAc;UACpL2H,YAAY,GAAG;YAAE1I,GAAG,EAAEwE,SAAS;YAAEvE,IAAI,EAAEwE;UAAW,CAAC;QACvD;MACJ,CAAC,MAAM;QACH,MAAMC,SAAS,GAAG3B,UAAU,GAAG0B,UAAU,GAAGD,SAAS;QACrD,MAAMuE,mBAAmB,GAAG,IAAI,CAAChJ,aAAa,IAAI2E,SAAS;QAE3D,IAAI,CAAC,IAAI,CAACrF,UAAU,IAAK,IAAI,CAACA,UAAU,IAAI0J,mBAAoB,EAAE;UAC9D,MAAMF,YAAY,GAAGX,qBAAqB,CAACxD,SAAS,EAAE,IAAI,CAACxG,QAAQ,CAAC;UACpE,MAAM4K,YAAY,GAAGX,qBAAqB,CAACU,YAAY,EAAE,IAAI,CAACrJ,KAAK,EAAE,IAAI,CAACI,IAAI,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACI,mBAAmB,EAAE6I,mBAAmB,CAAC;UAEvJrF,QAAQ,GAAGP,cAAc,CAAC0F,YAAY,EAAEC,YAAY,EAAE,IAAI,CAACtJ,KAAK,EAAE,IAAI,CAACI,IAAI,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACI,mBAAmB,EAAE6I,mBAAmB,CAAC;UACpJN,OAAO,GAAGpD,aAAa,CAACwD,YAAY,EAAEnF,QAAQ,EAAE,IAAI,CAAC9D,IAAI,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACI,mBAAmB,CAAC;UAC7Ga,cAAc,GAAG2C,QAAQ,KAAK,IAAI,CAAClE,KAAK,IAAIiJ,OAAO,KAAK,IAAI,CAAC7I,IAAI,IAAI,IAAI,CAACmB,cAAc;UACxF2H,YAAY,GAAGhE,SAAS;QAC5B;MACJ;MAEA,OAAO;QACHlF,KAAK,EAAEkE,QAAQ;QACf9D,IAAI,EAAE6I,OAAO;QACb1H,cAAc;QACd2D,SAAS,EAAEgE;MACf,CAAC;IACL,CAAC;IACDM,cAAcA,CAACjB,KAAK,EAAE;MAClB,MAAM;QAAEvI,KAAK;QAAEI,IAAI;QAAEmB,cAAc;QAAE2D;MAAU,CAAC,GAAG,IAAI,CAACoD,sBAAsB,CAACC,KAAK,CAAC;MAErF,IAAIhH,cAAc,EAAE;QAChB,MAAMkI,QAAQ,GAAG;UAAEzJ,KAAK;UAAEI;QAAK,CAAC;QAEhC,IAAI,CAAC2H,kBAAkB,CAAC0B,QAAQ,CAAC;QAEjC,IAAI,CAACzJ,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACI,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACG,aAAa,GAAG2E,SAAS;QAE9B,IAAI,CAACe,KAAK,CAAC,qBAAqB,EAAEwD,QAAQ,CAAC;QAE3C,IAAI,IAAI,CAACvK,IAAI,IAAI,IAAI,CAACwK,aAAa,CAAC1J,KAAK,CAAC,EAAE;UACxC,MAAMwB,aAAa,GAAG;YAClBxB,KAAK,EAAE,IAAI,CAACJ,IAAI,GAAGgF,IAAI,CAAC2B,GAAG,CAAC,IAAI,CAACoD,cAAc,CAAC3J,KAAK,CAAC,GAAG,IAAI,CAACJ,IAAI,EAAE,IAAI,CAACpB,KAAK,CAACsD,MAAM,GAAG,IAAI,CAAClC,IAAI,CAAC,GAAGI,KAAK;YAC1GI,IAAI,EAAEwE,IAAI,CAAC2B,GAAG,CAAC,IAAI,CAAC3G,IAAI,GAAG,CAAC,IAAI,CAAC+J,cAAc,CAAC3J,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAACJ,IAAI,GAAGQ,IAAI,EAAE,IAAI,CAAC5B,KAAK,CAACsD,MAAM;UACrG,CAAC;UACD,MAAM8H,kBAAkB,GAAG,IAAI,CAACpI,aAAa,CAACxB,KAAK,KAAKwB,aAAa,CAACxB,KAAK,IAAI,IAAI,CAACwB,aAAa,CAACpB,IAAI,KAAKoB,aAAa,CAACpB,IAAI;UAE7HwJ,kBAAkB,IAAI,IAAI,CAAC3D,KAAK,CAAC,WAAW,EAAEzE,aAAa,CAAC;UAC5D,IAAI,CAACA,aAAa,GAAGA,aAAa;QACtC;MACJ;IACJ,CAAC;IACDqI,QAAQA,CAACtB,KAAK,EAAE;MACZ,IAAI,CAACtC,KAAK,CAAC,QAAQ,EAAEsC,KAAK,CAAC;MAE3B,IAAI,IAAI,CAACvJ,KAAK,IAAI,IAAI,CAAC0K,aAAa,EAAE,EAAE;QACpC,IAAI,IAAI,CAACzI,aAAa,EAAE;UACpB6I,YAAY,CAAC,IAAI,CAAC7I,aAAa,CAAC;QACpC;QAEA,IAAI,CAAC,IAAI,CAACN,SAAS,IAAI,IAAI,CAAClB,UAAU,EAAE;UACpC,MAAM;YAAE8B;UAAe,CAAC,GAAG,IAAI,CAAC+G,sBAAsB,CAACC,KAAK,CAAC;UAC7D,MAAMwB,OAAO,GAAGxI,cAAc,KAAK,IAAI,CAAC3B,IAAI,GAAG,IAAI,CAAC8J,aAAa,EAAE,GAAG,KAAK,CAAC;UAE5EK,OAAO,KAAK,IAAI,CAACpJ,SAAS,GAAG,IAAI,CAAC;QACtC;QAEA,IAAI,CAACM,aAAa,GAAG+I,UAAU,CAAC,MAAM;UAClC,IAAI,CAACR,cAAc,CAACjB,KAAK,CAAC;UAE1B,IAAI,IAAI,CAAC5H,SAAS,IAAI,IAAI,CAAClB,UAAU,KAAK,CAAC,IAAI,CAACP,IAAI,IAAI,IAAI,CAACK,OAAO,KAAK0K,SAAS,CAAC,EAAE;YACjF,IAAI,CAACtJ,SAAS,GAAG,KAAK;YACtB,IAAI,CAACN,IAAI,GAAG,IAAI,CAACsJ,cAAc,EAAE;UACrC;QACJ,CAAC,EAAE,IAAI,CAAC3K,KAAK,CAAC;MAClB,CAAC,MAAM;QACH,IAAI,CAACwK,cAAc,CAACjB,KAAK,CAAC;MAC9B;IACJ,CAAC;IACD2B,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAAChJ,aAAa,EAAE;QACpB4I,YAAY,CAAC,IAAI,CAAC5I,aAAa,CAAC;MACpC;MAEA,IAAI,CAACA,aAAa,GAAG8I,UAAU,CAAC,MAAM;QAClC,IAAI9M,UAAU,CAACqF,SAAS,CAAC,IAAI,CAACxB,OAAO,CAAC,EAAE;UACpC,MAAMoC,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;UAC1B,MAAMuG,QAAQ,GAAG,IAAI,CAACzD,UAAU,EAAE;UAClC,MAAMQ,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;UACtC,MAAM,CAAC6D,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC5J,UAAU,CAACwF,QAAQ,CAAC,IAAI,CAAC3B,OAAO,CAAC,EAAE7D,UAAU,CAACyF,SAAS,CAAC,IAAI,CAAC5B,OAAO,CAAC,CAAC;UAC/F,MAAM,CAACoJ,WAAW,EAAEC,YAAY,CAAC,GAAG,CAACvD,KAAK,KAAK,IAAI,CAAC1F,YAAY,EAAE2F,MAAM,KAAK,IAAI,CAAC1F,aAAa,CAAC;UAChG,MAAMiJ,MAAM,GAAGlH,IAAI,GAAGgH,WAAW,IAAIC,YAAY,GAAG7G,UAAU,GAAG4G,WAAW,GAAG3D,QAAQ,GAAG4D,YAAY,GAAG,KAAK;UAE9G,IAAIC,MAAM,EAAE;YACR,IAAI,CAAC3J,mBAAmB,GAAG,IAAI,CAAC3B,iBAAiB;YACjD,IAAI,CAACoC,YAAY,GAAG0F,KAAK;YACzB,IAAI,CAACzF,aAAa,GAAG0F,MAAM;YAC3B,IAAI,CAACzF,mBAAmB,GAAGnE,UAAU,CAACwF,QAAQ,CAAC,IAAI,CAAC1B,OAAO,CAAC;YAC5D,IAAI,CAACM,oBAAoB,GAAGpE,UAAU,CAACyF,SAAS,CAAC,IAAI,CAAC3B,OAAO,CAAC;YAE9D,IAAI,CAACe,IAAI,EAAE;UACf;QACJ;MACJ,CAAC,EAAE,IAAI,CAAC9C,WAAW,CAAC;IACxB,CAAC;IACDwD,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAAChB,cAAc,EAAE;QACtB,IAAI,CAACA,cAAc,GAAG,IAAI,CAACyI,QAAQ,CAACI,IAAI,CAAC,IAAI,CAAC;QAE9CC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC/I,cAAc,CAAC;QACtD8I,MAAM,CAACC,gBAAgB,CAAC,mBAAmB,EAAE,IAAI,CAAC/I,cAAc,CAAC;MACrE;IACJ,CAAC;IACDY,oBAAoBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACZ,cAAc,EAAE;QACrB8I,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAChJ,cAAc,CAAC;QACzD8I,MAAM,CAACE,mBAAmB,CAAC,mBAAmB,EAAE,IAAI,CAAChJ,cAAc,CAAC;QACpE,IAAI,CAACA,cAAc,GAAG,IAAI;MAC9B;IACJ,CAAC;IACDiJ,UAAUA,CAACC,aAAa,EAAE;MACtB,MAAMC,KAAK,GAAG,CAAC,IAAI,CAACpM,KAAK,IAAI,EAAE,EAAEsD,MAAM;MACvC,MAAMuB,KAAK,GAAG,IAAI,CAACpD,MAAM,EAAE,GAAG,IAAI,CAACD,KAAK,CAACE,IAAI,GAAGyK,aAAa,GAAG,IAAI,CAAC3K,KAAK,GAAG2K,aAAa;MAE1F,OAAO;QACHtH,KAAK;QACLuH,KAAK;QACL5K,KAAK,EAAEqD,KAAK,KAAK,CAAC;QAClBjD,IAAI,EAAEiD,KAAK,KAAKuH,KAAK,GAAG,CAAC;QACzBC,IAAI,EAAExH,KAAK,GAAG,CAAC,KAAK,CAAC;QACrByH,GAAG,EAAEzH,KAAK,GAAG,CAAC,KAAK;MACvB,CAAC;IACL,CAAC;IACD0H,gBAAgBA,CAAC1H,KAAK,EAAE2H,UAAU,EAAE;MAChC,IAAIJ,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACkB,MAAM;MAEjC,OAAO;QACHuB,KAAK;QACLuH,KAAK;QACL5K,KAAK,EAAEqD,KAAK,KAAK,CAAC;QAClBjD,IAAI,EAAEiD,KAAK,KAAKuH,KAAK,GAAG,CAAC;QACzBC,IAAI,EAAExH,KAAK,GAAG,CAAC,KAAK,CAAC;QACrByH,GAAG,EAAEzH,KAAK,GAAG,CAAC,KAAK,CAAC;QACpB,GAAG2H;MACP,CAAC;IACL,CAAC;IACDrB,cAAcA,CAAC3J,KAAK,EAAE;MAClB,OAAO4E,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC7E,KAAK,IAAI,IAAI,CAACA,KAAK,IAAI,IAAI,CAACU,mBAAmB,GAAG,CAAC,KAAK,IAAI,CAACd,IAAI,IAAI,CAAC,CAAC,CAAC;IAChG,CAAC;IACD8J,aAAaA,CAAC1J,KAAK,EAAE;MACjB,OAAO,IAAI,CAACJ,IAAI,GAAG,IAAI,CAACS,IAAI,KAAK,IAAI,CAACsJ,cAAc,CAAC3J,KAAK,IAAI,IAAI,CAACA,KAAK,CAAC,GAAG,IAAI;IACpF,CAAC;IACDwC,YAAYA,CAACyI,EAAE,EAAE;MACb,IAAI,CAACjK,OAAO,GAAGiK,EAAE,IAAI,IAAI,CAACjK,OAAO,IAAI9D,UAAU,CAACgO,UAAU,CAAC,IAAI,CAACnK,OAAO,EAAE,4BAA4B,CAAC;IAC1G,CAAC;IACDoK,UAAUA,CAACF,EAAE,EAAE;MACX,IAAI,CAAClK,OAAO,GAAGkK,EAAE;IACrB,CAAC;IACDG,UAAUA,CAACH,EAAE,EAAE;MACX,IAAI,CAACjK,OAAO,GAAGiK,EAAE;IACrB;EACJ,CAAC;EACDI,QAAQ,EAAE;IACNC,cAAcA,CAAA,EAAG;MACb,OAAO,CACH,mBAAmB,EACnB;QACI,0BAA0B,EAAE,IAAI,CAAC3L,MAAM;QACvC,sCAAsC,EAAE,IAAI,CAACM,MAAM,EAAE;QACrD,kDAAkD,EAAE,IAAI,CAAC+C,YAAY;MACzE,CAAC,EACD,IAAI,CAACzE,KAAK,CACb;IACL,CAAC;IACDgN,YAAYA,CAAA,EAAG;MACX,OAAO,CACH,2BAA2B,EAC3B;QACI,2BAA2B,EAAE,IAAI,CAAC5K;MACtC,CAAC,CACJ;IACL,CAAC;IACD6K,WAAWA,CAAA,EAAG;MACV,OAAO,CACH,0BAA0B,EAC1B;QACI,qBAAqB,EAAE,CAAC,IAAI,CAACC,MAAM,CAACC;MACxC,CAAC,CACJ;IACL,CAAC;IACDC,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAACnN,KAAK,IAAI,CAAC,IAAI,CAACmC,SAAS,EAAE;QAC/B,IAAI,IAAI,CAACV,MAAM,EAAE,EAAE,OAAO,IAAI,CAACzB,KAAK,CAACoN,KAAK,CAAC,IAAI,CAAC/L,UAAU,GAAG,CAAC,GAAG,IAAI,CAACG,KAAK,CAACE,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,CAAC,CAACiG,GAAG,CAAE0F,IAAI,IAAM,IAAI,CAACvM,OAAO,GAAGuM,IAAI,GAAGA,IAAI,CAACD,KAAK,CAAC,IAAI,CAAC/L,UAAU,GAAG,CAAC,GAAG,IAAI,CAACG,KAAK,CAACG,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,CAAE,CAAC,CAAC,KACtM,IAAI,IAAI,CAAC6C,YAAY,EAAE,IAAI,IAAI,CAAC1D,OAAO,EAAE,OAAO,IAAI,CAACd,KAAK,CAAC,KAC3D,OAAO,IAAI,CAACA,KAAK,CAACoN,KAAK,CAAC,IAAI,CAAC/L,UAAU,GAAG,CAAC,GAAG,IAAI,CAACG,KAAK,EAAE,IAAI,CAACI,IAAI,CAAC;MAC7E;MAEA,OAAO,EAAE;IACb,CAAC;IACD0L,UAAUA,CAAA,EAAG;MACT,OAAO,IAAI,CAACnL,SAAS,GAAI,IAAI,CAACtB,cAAc,GAAG,IAAI,CAACuB,SAAS,GAAG,EAAE,GAAI,IAAI,CAAC+K,WAAW;IAC1F,CAAC;IACDI,aAAaA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACzM,OAAO,EAAE;QACd,MAAM6D,IAAI,GAAG,IAAI,CAAClD,MAAM,EAAE;QAC1B,MAAMsD,UAAU,GAAG,IAAI,CAACP,YAAY,EAAE;QAEtC,IAAIG,IAAI,IAAII,UAAU,EAAE;UACpB,OAAO,IAAI,CAAC5C,SAAS,IAAI,IAAI,CAACtB,cAAc,GAAI8D,IAAI,GAAG,IAAI,CAACvC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,SAAS,GAAI,IAAI,CAACtB,OAAO,CAACsM,KAAK,CAACzI,IAAI,GAAG,IAAI,CAACnD,KAAK,CAACG,IAAI,GAAG,IAAI,CAACH,KAAK,EAAEmD,IAAI,GAAG,IAAI,CAAC/C,IAAI,CAACD,IAAI,GAAG,IAAI,CAACC,IAAI,CAAC;QAC3L;MACJ;MAEA,OAAO,IAAI,CAACd,OAAO;IACvB;EACJ,CAAC;EACD0M,UAAU,EAAE;IACR/O,WAAW,EAAEA;EACjB;AACJ,CAAC;AAED,MAAMgP,UAAU,GAAG,CAAC,UAAU,CAAC;AAE/B,SAASC,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC7D,MAAMC,sBAAsB,GAAGtP,gBAAgB,CAAC,aAAa,CAAC;EAE9D,OAAQ,CAACkP,MAAM,CAACjN,QAAQ,IACnBhC,SAAS,EAAE,EAAEC,kBAAkB,CAAC,KAAK,EAAEC,UAAU,CAAC;IACjDoP,GAAG,EAAE,CAAC;IACNC,GAAG,EAAEH,QAAQ,CAACrB,UAAU;IACxB5M,KAAK,EAAEiO,QAAQ,CAAClB,cAAc;IAC9B5L,QAAQ,EAAE2M,MAAM,CAAC3M,QAAQ;IACzBpB,KAAK,EAAE+N,MAAM,CAAC/N,KAAK;IACnBuL,QAAQ,EAAEuC,MAAM,CAAC,CAAC,CAAC,KAAKA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGQ,IAAI,KAAMJ,QAAQ,CAAC3C,QAAQ,IAAI2C,QAAQ,CAAC3C,QAAQ,CAAC,GAAG+C,IAAI,CAAE;EACpG,CAAC,EAAET,IAAI,CAACU,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CACpBtP,UAAU,CAAC4O,IAAI,CAACV,MAAM,EAAE,SAAS,EAAE;IACjCqB,UAAU,EAAEN,QAAQ,CAACjB,YAAY;IACjC/M,KAAK,EAAEgO,QAAQ,CAACb,WAAW;IAC3BoB,cAAc,EAAEP,QAAQ,CAAC9B,UAAU;IACnCnL,OAAO,EAAEgN,KAAK,CAAC5L,SAAS;IACxBoK,gBAAgB,EAAEyB,QAAQ,CAACzB,gBAAgB;IAC3CrM,QAAQ,EAAE2N,MAAM,CAAC3N,QAAQ;IACzBwB,IAAI,EAAEsM,QAAQ,CAACV,UAAU;IACzBxM,OAAO,EAAEkN,QAAQ,CAACT,aAAa;IAC/BX,UAAU,EAAEoB,QAAQ,CAACpB,UAAU;IAC/BvK,WAAW,EAAE0L,KAAK,CAAC1L,WAAW;IAC9BC,YAAY,EAAEyL,KAAK,CAACzL,YAAY;IAChC0F,QAAQ,EAAEgG,QAAQ,CAACzJ,UAAU,EAAE;IAC/BQ,UAAU,EAAEiJ,QAAQ,CAACxJ,YAAY,EAAE;IACnCG,IAAI,EAAEqJ,QAAQ,CAACvM,MAAM;EACvB,CAAC,EAAE,MAAM,CACPzC,kBAAkB,CAAC,KAAK,EAAEF,UAAU,CAAC;IACnCqP,GAAG,EAAEH,QAAQ,CAACpB,UAAU;IACxB7M,KAAK,EAAEiO,QAAQ,CAACjB,YAAY;IAC5BjN,KAAK,EAAEiO,KAAK,CAACzL;EACf,CAAC,EAAEqL,IAAI,CAACU,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,EACtBzP,SAAS,CAAC,IAAI,CAAC,EAAEC,kBAAkB,CAACI,QAAQ,EAAE,IAAI,EAAEC,UAAU,CAAC8O,QAAQ,CAACb,WAAW,EAAE,CAACE,IAAI,EAAExI,KAAK,KAAK;IACrG,OAAO9F,UAAU,CAAC4O,IAAI,CAACV,MAAM,EAAE,MAAM,EAAE;MACrCiB,GAAG,EAAErJ,KAAK;MACVwI,IAAI,EAAEA,IAAI;MACV3I,OAAO,EAAEsJ,QAAQ,CAAC9B,UAAU,CAACrH,KAAK;IACpC,CAAC,CAAC;EACJ,CAAC,CAAC,EAAE,GAAG,CAAC,EACT,EAAE,EAAE,CAAC,CACP,CAAC,EACDgJ,MAAM,CAAC7M,UAAU,IACbpC,SAAS,EAAE,EAAEC,kBAAkB,CAAC,KAAK,EAAEC,UAAU,CAAC;IACjDoP,GAAG,EAAE,CAAC;IACNnO,KAAK,EAAE,0BAA0B;IACjCD,KAAK,EAAEiO,KAAK,CAAC1L;EACf,CAAC,EAAEsL,IAAI,CAACU,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IACjClP,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,EAC/B,CAAC0O,MAAM,CAAChN,cAAc,IAAIgN,MAAM,CAAC5M,UAAU,IAAI8M,KAAK,CAAC5L,SAAS,IAC1DvD,SAAS,EAAE,EAAEC,kBAAkB,CAAC,KAAK,EAAEC,UAAU,CAAC;IACjDoP,GAAG,EAAE,CAAC;IACNnO,KAAK,EAAEiO,QAAQ,CAAChB;EAClB,CAAC,EAAEW,IAAI,CAACU,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CACrBV,IAAI,CAACV,MAAM,IAAIU,IAAI,CAACV,MAAM,CAACC,MAAM,IAC7BtO,SAAS,CAAC,IAAI,CAAC,EAAEC,kBAAkB,CAACI,QAAQ,EAAE;IAAEiP,GAAG,EAAE;EAAE,CAAC,EAAEhP,UAAU,CAAC6O,KAAK,CAAC3L,SAAS,EAAE,CAACoM,CAAC,EAAE3J,KAAK,KAAK;IACnG,OAAO9F,UAAU,CAAC4O,IAAI,CAACV,MAAM,EAAE,QAAQ,EAAE;MACvCiB,GAAG,EAAErJ,KAAK;MACVH,OAAO,EAAEsJ,QAAQ,CAACzB,gBAAgB,CAAC1H,KAAK,EAAEmJ,QAAQ,CAACvM,MAAM,EAAE,IAAI;QAAEgN,OAAO,EAAEd,IAAI,CAACe,oBAAoB,CAAC/M;MAAK,CAAC;IAC5G,CAAC,CAAC;EACJ,CAAC,CAAC,EAAE,GAAG,CAAC,IACRxC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,EAChCJ,UAAU,CAAC4O,IAAI,CAACV,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,MAAM,CAC/C7N,WAAW,CAAC6O,sBAAsB,EAAEnP,UAAU,CAAC;IAC7C6P,IAAI,EAAE,EAAE;IACR5O,KAAK,EAAE;EACT,CAAC,EAAE4N,IAAI,CAACU,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CACvC,CAAC,CACH,EAAE,EAAE,CAAC,IACNlP,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CACjC,EAAE,EAAE,EAAEsO,UAAU,CAAC,KACjB7O,SAAS,EAAE,EAAEC,kBAAkB,CAACI,QAAQ,EAAE;IAAEiP,GAAG,EAAE;EAAE,CAAC,EAAE,CACrDnP,UAAU,CAAC4O,IAAI,CAACV,MAAM,EAAE,SAAS,CAAC,EAClClO,UAAU,CAAC4O,IAAI,CAACV,MAAM,EAAE,SAAS,EAAE;IACjCjN,KAAK,EAAE6N,MAAM,CAAC7N,KAAK;IACnB0B,IAAI,EAAEmM,MAAM,CAAC7N,KAAK;IAClBc,OAAO,EAAEkN,QAAQ,CAACT;EACpB,CAAC,CAAC,CACH,EAAE,EAAE,CAAC,CAAC;AACb;AAEA,SAASqB,WAAWA,CAACC,GAAG,EAAEV,GAAG,EAAE;EAC7B,IAAKA,GAAG,KAAK,KAAK,CAAC,EAAGA,GAAG,GAAG,CAAC,CAAC;EAC9B,IAAIW,QAAQ,GAAGX,GAAG,CAACW,QAAQ;EAE3B,IAAI,CAACD,GAAG,IAAI,OAAOE,QAAQ,KAAK,WAAW,EAAE;IAAE;EAAQ;EAEvD,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACE,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACpE,IAAInP,KAAK,GAAGiP,QAAQ,CAACG,aAAa,CAAC,OAAO,CAAC;EAC3CpP,KAAK,CAACH,IAAI,GAAG,UAAU;EAEvB,IAAImP,QAAQ,KAAK,KAAK,EAAE;IACtB,IAAIE,IAAI,CAACG,UAAU,EAAE;MACnBH,IAAI,CAACI,YAAY,CAACtP,KAAK,EAAEkP,IAAI,CAACG,UAAU,CAAC;IAC3C,CAAC,MAAM;MACLH,IAAI,CAACK,WAAW,CAACvP,KAAK,CAAC;IACzB;EACF,CAAC,MAAM;IACLkP,IAAI,CAACK,WAAW,CAACvP,KAAK,CAAC;EACzB;EAEA,IAAIA,KAAK,CAACwP,UAAU,EAAE;IACpBxP,KAAK,CAACwP,UAAU,CAACC,OAAO,GAAGV,GAAG;EAChC,CAAC,MAAM;IACL/O,KAAK,CAACuP,WAAW,CAACN,QAAQ,CAACS,cAAc,CAACX,GAAG,CAAC,CAAC;EACjD;AACF;AAEA,IAAIY,QAAQ,GAAG,knCAAknC;AACjoCb,WAAW,CAACa,QAAQ,CAAC;AAErBpQ,MAAM,CAACqO,MAAM,GAAGA,MAAM;AAEtB,SAASrO,MAAM,IAAIQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}