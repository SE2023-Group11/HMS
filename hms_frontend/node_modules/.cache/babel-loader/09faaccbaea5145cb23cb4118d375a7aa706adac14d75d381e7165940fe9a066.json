{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString($props.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.updateMessage && $setup.updateMessage(...args))\n  }, \"更新消息\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","message","onClick","_cache","args","$setup","updateMessage"],"sources":["D:\\Desktop\\HMS-front-end\\hms_frontend\\src\\views\\ClickAgain.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <p>{{ message }}</p>\r\n      <button @click=\"updateMessage\">更新消息</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineEmits, defineProps } from 'vue';\r\n  \r\n  export default {\r\n    props: {\r\n      message: {\r\n  type: String,\r\n        required: true\r\n      }\r\n    },\r\n    emits: ['update-message'],\r\n    setup(props, { emit }) {\r\n      const updateMessage = () => {\r\n        emit('update-message', 'New message');\r\n      };\r\n  \r\n      return {\r\n        updateMessage\r\n      };\r\n    }\r\n  };\r\n  </script>"],"mappings":";;uBACIA,mBAAA,CAGM,cAFJC,mBAAA,CAAoB,WAAAC,gBAAA,CAAdC,MAAA,CAAAC,OAAO,kBACbH,mBAAA,CAA4C;IAAnCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,aAAA,IAAAD,MAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}